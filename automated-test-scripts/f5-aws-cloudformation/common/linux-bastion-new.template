{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This template is intended to be deployed into an existing VPC with two public subnets. It will create an auto-scaling group of Linux bastion instances in the public VPC subnets. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(0037)",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
					"Label": {
						"default": "Network Configuration"
					},
					"Parameters": [
						"VPCID",
						"PublicSubnet1ID",
						"PublicSubnet2ID",
						"RemoteAccessCIDR"
					]
				},
				{
					"Label": {
						"default": "Amazon EC2 Configuration"
					},
					"Parameters": [
						"KeyPairName",
						"BastionAMIOS",
						"BastionInstanceType"
					]
				},
				{
					"Label": {
						"default": "Linux Bastion Configuration"
					},
					"Parameters": [
						"NumBastionHosts",
						"BastionTenancy",
						"EnableBanner",
						"BastionBanner",
						"EnableTCPForwarding",
						"EnableX11Forwarding"
					]
				},
				{
					"Label": {
						"default": "AWS Quick Start Configuration"
					},
					"Parameters": [
						"QSS3BucketName",
						"QSS3KeyPrefix"
					]
				}
			],
			"ParameterLabels": {
				"BastionAMIOS": {
					"default": "Bastion AMI Operating System"
				},
				"BastionTenancy": {
					"default": "Bastion Tenancy"
				},
				"BastionBanner": {
					"default": "Bastion Banner"
				},
				"BastionInstanceType": {
					"default": "Bastion Instance Type"
				},
				"EnableBanner": {
					"default": "Enable Banner"
				},
				"EnableTCPForwarding": {
					"default": "Enable TCP Forwarding"
				},
				"EnableX11Forwarding": {
					"default": "Enable X11 Forwarding"
				},
				"KeyPairName": {
					"default": "Key Pair Name"
				},
				"NumBastionHosts": {
					"default": "Number of Bastion Hosts"
				},
				"PublicSubnet1ID": {
					"default": "Public Subnet 1 ID"
				},
				"PublicSubnet2ID": {
					"default": "Public Subnet 2 ID"
				},
				"QSS3BucketName": {
					"default": "Quick Start S3 Bucket Name"
				},
				"QSS3KeyPrefix": {
					"default": "Quick Start S3 Key Prefix"
				},
				"RemoteAccessCIDR": {
					"default": "Allowed Bastion External Access CIDR"
				},
				"VPCID": {
					"default": "VPC ID"
				}
			}
		}
	},
	"Parameters": {
		"BastionAMIOS": {
			"AllowedValues": [
				"Amazon-Linux2-HVM",
				"CentOS-7-HVM",
				"Ubuntu-Server-20.04-LTS-HVM",
				"SUSE-SLES-15-HVM"
			],
			"Default": "Amazon-Linux2-HVM",
			"Description": "The Linux distribution for the AMI to be used for the bastion instances.",
			"Type": "String"
		},
		"BastionBanner": {
			"Default": "https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt",
			"Description": "Banner text to display upon login",
			"Type": "String"
		},
		"BastionTenancy": {
			"Description": "VPC Tenancy to launch the bastion in. Options: 'dedicated' or 'default'",
			"Type": "String",
			"Default": "default",
			"AllowedValues": [
				"dedicated",
				"default"
			]
		},
		"BastionInstanceType": {
			"AllowedValues": [
				"t2.nano",
				"t2.micro",
				"t2.small",
				"t2.medium",
				"t2.large",
				"t3.micro",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge",
				"m5.large"
			],
			"Default": "t2.micro",
			"Description": "Amazon EC2 instance type for the bastion instances",
			"Type": "String"
		},
		"EnableBanner": {
			"AllowedValues": [
				"true",
				"false"
			],
			"Default": "false",
			"Description": "To include a banner to be displayed when connecting via SSH to the bastion, set this parameter to true",
			"Type": "String"
		},
		"EnableTCPForwarding": {
			"Type": "String",
			"Description": "Enable/Disable TCP Forwarding",
			"Default": "false",
			"AllowedValues": [
				"true",
				"false"
			]
		},
		"EnableX11Forwarding": {
			"Type": "String",
			"Description": "Enable/Disable X11 Forwarding",
			"Default": "false",
			"AllowedValues": [
				"true",
				"false"
			]
		},
		"KeyPairName": {
			"Description": "Enter a Public/private key pair. If you do not have one in this region, please create it before continuing",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"NumBastionHosts": {
			"AllowedValues": [
				"1",
				"2",
				"3",
				"4"
			],
			"Default": "1",
			"Description": "Enter the number of bastion hosts to create",
			"Type": "String"
		},
		"PublicSubnet1ID": {
			"Description": "ID of the public subnet 1 that you want to provision the first bastion into (e.g., subnet-a0246dcd)",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"PublicSubnet2ID": {
			"Description": "ID of the public subnet 2 you want to provision the second bastion into (e.g., subnet-e3246d8e)",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"QSS3BucketName": {
			"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
			"ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Default": "aws-quickstart",
			"Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Type": "String"
		},
		"QSS3KeyPrefix": {
			"AllowedPattern": "^([0-9a-zA-Z-]+/)*$",
			"ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). The prefix should end with a forward slash (/).",
			"Default": "quickstart-linux-bastion/",
			"Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/) and it should end with a forward slash (/).",
			"Type": "String"
		},
		"RemoteAccessCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
			"Description": "Allowed CIDR block for external SSH access to the bastions",
			"Type": "String"
		},
		"VPCID": {
			"Description": "ID of the VPC (e.g., vpc-0343606e)",
			"Type": "AWS::EC2::VPC::Id"
		},
		"AlternativeInitializationScript": {
			"AllowedPattern": "^http.*|^$",
			"ConstraintDescription": "URL must begin with http",
			"Description": "specify an alternative initialization script to run during setup",
			"Default": "",
			"Type": "String"
		},
		"OSImageOverride": {
			"Description": "Specify a region specific image to use for the instance",
			"Type": "String",
			"Default": ""
		},
		"AlternativeIAMRole": {
			"Description": "specify an existing IAM Role name to attach to the bastion, if left blank a new role will be created.",
			"Default": "",
			"Type": "String"
		},
		"EnvironmentVariables": {
			"Description": "Specify a comma separated list of environment variables for use in bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot contain commas",
			"Type": "String",
			"Default": ""
		},
		"environment": {
			"Type": "String",
			"Default": "Environment"
		},
		"group": {
			"Type": "String",
			"Default": "Group"
		},
		"owner": {
			"Type": "String",
			"Default": "Owner"
		},
		"application": {
			"Type": "String",
			"Default": "Application"
		}
	},
	"Rules": {
		"SubnetsInVPC": {
			"Assertions": [{
				"Assert": {
					"Fn::EachMemberIn": [{
							"Fn::ValueOfAll": [
								"AWS::EC2::Subnet::Id",
								"VpcId"
							]
						},
						{
							"Fn::RefAll": "AWS::EC2::VPC::Id"
						}
					]
				},
				"AssertDescription": "All subnets must exist in the VPC"
			}]
		}
	},
	"Mappings": {
		"AWSAMIRegionMap": {
			"af-south-1": {
				"AMZNLINUX2": "ami-0936d2754993c364e",
				"US2004HVM": "ami-022666956ad401a16",
				"CENTOS7HVM": "ami-0a2be7731769e6cc1"
			},
			"ap-northeast-1": {
				"AMZNLINUX2": "ami-0ca38c7440de1749a",
				"US2004HVM": "ami-015f1a68ce825a8d2",
				"CENTOS7HVM": "ami-06a46da680048c8ae",
				"SLES15HVM": "ami-056ac8ad44e6a7e1f"
			},
			"ap-northeast-2": {
				"AMZNLINUX2": "ami-0f2c95e9fe3f8f80e",
				"US2004HVM": "ami-0be9734c9e68b99f4",
				"CENTOS7HVM": "ami-06e83aceba2cb0907",
				"SLES15HVM": "ami-0f81fff879bafe6b8"
			},
			"ap-south-1": {
				"AMZNLINUX2": "ami-010aff33ed5991201",
				"US2004HVM": "ami-00aaac1f2ef4ce965",
				"CENTOS7HVM": "ami-026f33d38b6410e30",
				"SLES15HVM": "ami-01be89269d32f2a16"
			},
			"ap-southeast-1": {
				"AMZNLINUX2": "ami-02f26adf094f51167",
				"US2004HVM": "ami-0012ffabeb7413479",
				"CENTOS7HVM": "ami-07f65177cb990d65b",
				"SLES15HVM": "ami-070356c21596ddc67"
			},
			"ap-southeast-2": {
				"AMZNLINUX2": "ami-0186908e2fdeea8f3",
				"US2004HVM": "ami-03ec1fe05b3849c74",
				"CENTOS7HVM": "ami-0b2045146eb00b617",
				"SLES15HVM": "ami-0c4245381c67efb39"
			},
			"ca-central-1": {
				"AMZNLINUX2": "ami-0101734ab73bd9e15",
				"US2004HVM": "ami-04c56d394d31cdeac",
				"CENTOS7HVM": "ami-04a25c39dc7a8aebb",
				"SLES15HVM": "ami-0c97d9b588207dad6"
			},
			"eu-central-1": {
				"AMZNLINUX2": "ami-043097594a7df80ec",
				"US2004HVM": "ami-0980c5102b5ef10cc",
				"CENTOS7HVM": "ami-0e8286b71b81c3cc1",
				"SLES15HVM": "ami-05dfd265ea534a3e9"
			},
			"me-south-1": {
				"AMZNLINUX2": "ami-0880769bc15eeec4f",
				"US2004HVM": "ami-03cc0b5db8321f2e5",
				"CENTOS7HVM": "ami-011c71a894b10f35b",
				"SLES15HVM": "ami-0252c6d3a59c7473b"
			},
			"ap-east-1": {
				"AMZNLINUX2": "ami-0aca22cb23f122f27",
				"US2004HVM": "ami-0c7e5903bee96ef81",
				"CENTOS7HVM": "ami-0e5c29e6c87a9644f",
				"SLES15HVM": "ami-0ad6e15bcbb2dbe38"
			},
			"eu-north-1": {
				"AMZNLINUX2": "ami-050fdc53cf6ba8f7f",
				"US2004HVM": "ami-0663a4867a210287a",
				"CENTOS7HVM": "ami-05788af9005ef9a93",
				"SLES15HVM": "ami-0741fa1a008af40ad"
			},
			"eu-south-1": {
				"AMZNLINUX2": "ami-0f447354763f0eaac",
				"US2004HVM": "ami-035e213233577516f",
				"CENTOS7HVM": "ami-03014b98e9665115a",
				"SLES15HVM": "ami-051cbea0e7660063d"
			},
			"eu-west-1": {
				"AMZNLINUX2": "ami-063d4ab14480ac177",
				"US2004HVM": "ami-0213344887e47003a",
				"CENTOS7HVM": "ami-0b850cf02cc00fdc8",
				"SLES15HVM": "ami-0a58a1b152ba55f1d"
			},
			"eu-west-2": {
				"AMZNLINUX2": "ami-06dc09bb8854cbde3",
				"US2004HVM": "ami-0add0a5a0cf9afc6c",
				"CENTOS7HVM": "ami-09e5afc68eed60ef4",
				"SLES15HVM": "ami-01497522185aaa4ee"
			},
			"eu-west-3": {
				"AMZNLINUX2": "ami-0b3e57ee3b63dd76b",
				"US2004HVM": "ami-01019e7343a5f361d",
				"CENTOS7HVM": "ami-0cb72d2e599cffbf9",
				"SLES15HVM": "ami-0f238bd4c6fdbefb0"
			},
			"sa-east-1": {
				"AMZNLINUX2": "ami-05373777d08895384",
				"US2004HVM": "ami-0312c74c38dc7bae6",
				"CENTOS7HVM": "ami-0b30f38d939dd4b54",
				"SLES15HVM": "ami-0772af912976aa692"
			},
			"us-east-1": {
				"AMZNLINUX2": "ami-0d5eff06f840b45e9",
				"US2004HVM": "ami-0db6c6238a40c0681",
				"CENTOS7HVM": "ami-0affd4508a5d2481b",
				"SLES15HVM": "ami-0b1764f3d7d2e2316"
			},
			"us-gov-west-1": {
				"AMZNLINUX2": "ami-0bbf3595bb2fb39ec",
				"SLES15HVM": "ami-57c0ba36"
			},
			"us-gov-east-1": {
				"AMZNLINUX2": "ami-0cc17d57bec8c6017",
				"SLES15HVM": "ami-05e4bedfad53425e9"
			},
			"us-east-2": {
				"AMZNLINUX2": "ami-077e31c4939f6a2f3",
				"US2004HVM": "ami-03b6c8bd55e00d5ed",
				"CENTOS7HVM": "ami-01e36b7901e884a10",
				"SLES15HVM": "ami-05ea824317ffc0c20"
			},
			"us-west-1": {
				"AMZNLINUX2": "ami-04468e03c37242e1e",
				"US2004HVM": "ami-0f5868930cb63c89c",
				"CENTOS7HVM": "ami-098f55b4287a885ba",
				"SLES15HVM": "ami-00e34a7624e5a7107"
			},
			"us-west-2": {
				"AMZNLINUX2": "ami-0cf6f5c8a62fa5da6",
				"US2004HVM": "ami-038a0ccaaedae6406",
				"CENTOS7HVM": "ami-0bc06212a56393ee1",
				"SLES15HVM": "ami-0f1e3b3fb0fec0361"
			},
			"cn-north-1": {
				"AMZNLINUX2": "ami-0c52e2685c7218558",
				"CENTOS7HVM": "ami-08c16f7e830c0e393",
				"SLES15HVM": "ami-021392849b6221a81"
			},
			"cn-northwest-1": {
				"AMZNLINUX2": "ami-05b9b6d6acf8ae9b6",
				"CENTOS7HVM": "ami-0f21aa96a61df8c44",
				"SLES15HVM": "ami-00e1de3ee6d0d28ea"
			}
		},
		"LinuxAMINameMap": {
			"Amazon-Linux2-HVM": {
				"Code": "AMZNLINUX2",
				"OS": "Amazon"
			},
			"CentOS-7-HVM": {
				"Code": "CENTOS7HVM",
				"OS": "CentOS"
			},
			"Ubuntu-Server-18.04-LTS-HVM": {
				"Code": "US1804HVM",
				"OS": "Ubuntu"
			},
			"Ubuntu-Server-20.04-LTS-HVM": {
				"Code": "US2004HVM",
				"OS": "Ubuntu"
			},
			"SUSE-SLES-15-HVM": {
				"Code": "SLES15HVM",
				"OS": "SLES"
			}
		}
	},
	"Conditions": {
		"2BastionCondition": {
			"Fn::Or": [{
					"Fn::Equals": [{
							"Ref": "NumBastionHosts"
						},
						"2"
					]
				},
				{
					"Condition": "3BastionCondition"
				},
				{
					"Condition": "4BastionCondition"
				}
			]
		},
		"3BastionCondition": {
			"Fn::Or": [{
					"Fn::Equals": [{
							"Ref": "NumBastionHosts"
						},
						"3"
					]
				},
				{
					"Condition": "4BastionCondition"
				}
			]
		},
		"4BastionCondition": {
			"Fn::Equals": [{
					"Ref": "NumBastionHosts"
				},
				"4"
			]
		},
		"GovCloudCondition": {
			"Fn::Equals": [{
					"Ref": "AWS::Region"
				},
				"us-gov-west-1"
			]
		},
		"UseAlternativeInitialization": {
			"Fn::Not": [{
				"Fn::Equals": [{
						"Ref": "AlternativeInitializationScript"
					},
					""
				]
			}]
		},
		"CreateIAMRole": {
			"Fn::Equals": [{
					"Ref": "AlternativeIAMRole"
				},
				""
			]
		},
		"UseOSImageOverride": {
			"Fn::Not": [{
				"Fn::Equals": [{
						"Ref": "OSImageOverride"
					},
					""
				]
			}]
		},
		"useChinaRegion": {
			"Fn::Or": [{
					"Fn::Equals": [
						"cn-north-1",
						{
							"Ref": "AWS::Region"
						}
					]
				},
				{
					"Fn::Equals": [
						"cn-northwest-1",
						{
							"Ref": "AWS::Region"
						}
					]
				}
			]
		}
	},
	"Resources": {
		"BastionMainLogGroup": {
			"Type": "AWS::Logs::LogGroup"
		},
		"SSHMetricFilter": {
			"Type": "AWS::Logs::MetricFilter",
			"Properties": {
				"LogGroupName": {
					"Ref": "BastionMainLogGroup"
				},
				"FilterPattern": "ON FROM USER PWD",
				"MetricTransformations": [{
					"MetricName": "SSHCommandCount",
					"MetricValue": 1,
					"MetricNamespace": {
						"Fn::Join": [
							"/",
							[
								"AWSQuickStart",
								{
									"Ref": "AWS::StackName"
								}
							]
						]
					}
				}]
			}
		},
		"BastionHostRole": {
			"Condition": "CreateIAMRole",
			"Type": "AWS::IAM::Role",
			"Properties": {
				"Path": "/",
				"AssumeRolePolicyDocument": {
					"Statement": [{
						"Action": [
							"sts:AssumeRole"
						],
						"Principal": {
							"Service": [{
								"Fn::If": [
									"useChinaRegion",
									"ec2.amazonaws.com.cn",
									"ec2.amazonaws.com"
								]
							}]
						},
						"Effect": "Allow"
					}],
					"Version": "2012-10-17"
				}
			}
		},
		"BastionHostPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "BastionPolicy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
							"Action": [
								"s3:GetObject"
							],
							"Resource": {
								"Fn::Sub": [
									"arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
									{
										"Partition": {
											"Fn::If": [
												"GovCloudCondition",
												"aws-us-gov",
												{
													"Fn::If": [
														"useChinaRegion",
														"aws-cn",
														"aws"
													]
												}
											]
										}
									}
								]
							},
							"Effect": "Allow"
						},
						{
							"Action": [
								"logs:CreateLogStream",
								"logs:GetLogEvents",
								"logs:PutLogEvents",
								"logs:DescribeLogGroups",
								"logs:DescribeLogStreams",
								"logs:PutRetentionPolicy",
								"logs:PutMetricFilter",
								"logs:CreateLogGroup"
							],
							"Resource": {
								"Fn::Sub": [
									"arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*",
									{
										"Partition": {
											"Fn::If": [
												"GovCloudCondition",
												"aws-us-gov",
												{
													"Fn::If": [
														"useChinaRegion",
														"aws-cn",
														"aws"
													]
												}
											]
										}
									}
								]
							},
							"Effect": "Allow"
						},
						{
							"Action": [
								"ec2:AssociateAddress",
								"ec2:DescribeAddresses"
							],
							"Resource": "*",
							"Effect": "Allow"
						}
					]
				},
				"Roles": [{
					"Fn::If": [
						"CreateIAMRole",
						{
							"Ref": "BastionHostRole"
						},
						{
							"Ref": "AlternativeIAMRole"
						}
					]
				}]
			}
		},
		"BastionHostProfile": {
			"DependsOn": "BastionHostPolicy",
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Roles": [{
					"Fn::If": [
						"CreateIAMRole",
						{
							"Ref": "BastionHostRole"
						},
						{
							"Ref": "AlternativeIAMRole"
						}
					]
				}],
				"Path": "/"
			}
		},
		"EIP1": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"EIP2": {
			"Type": "AWS::EC2::EIP",
			"Condition": "2BastionCondition",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"EIP3": {
			"Type": "AWS::EC2::EIP",
			"Condition": "3BastionCondition",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"EIP4": {
			"Type": "AWS::EC2::EIP",
			"Condition": "4BastionCondition",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"BastionAutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"LaunchConfigurationName": {
					"Ref": "BastionLaunchConfiguration"
				},
				"VPCZoneIdentifier": [{
						"Ref": "PublicSubnet1ID"
					},
					{
						"Ref": "PublicSubnet2ID"
					}
				],
				"MinSize": {
					"Ref": "NumBastionHosts"
				},
				"MaxSize": {
					"Ref": "NumBastionHosts"
				},
				"Cooldown": "300",
				"DesiredCapacity": {
					"Ref": "NumBastionHosts"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "LinuxBastion",
					"PropagateAtLaunch": "true"
				}]
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Count": {
						"Ref": "NumBastionHosts"
					},
					"Timeout": "PT30M"
				}
			}
		},
		"BastionLaunchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Metadata": {
				"AWS::CloudFormation::Authentication": {
					"S3AccessCreds": {
						"type": "S3",
						"roleName": {
							"Fn::If": [
								"CreateIAMRole",
								{
									"Ref": "BastionHostRole"
								},
								{
									"Ref": "AlternativeIAMRole"
								}
							]
						},
						"buckets": [{
							"Ref": "QSS3BucketName"
						}]
					}
				},
				"AWS::CloudFormation::Init": {
					"config": {
						"files": {
							"/tmp/bastion_bootstrap.sh": {
								"source": {
									"Fn::If": [
										"UseAlternativeInitialization",
										{
											"Ref": "AlternativeInitializationScript"
										},
										{
											"Fn::Sub": [
												"https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh",
												{
													"QSS3Region": {
														"Fn::If": [
															"GovCloudCondition",
															"s3-us-gov-west-1",
															"s3"
														]
													}
												}
											]
										}
									]
								},
								"mode": "000550",
								"owner": "root",
								"group": "root",
								"authentication": "S3AccessCreds"
							}
						},
						"commands": {
							"b-bootstrap": {
								"command": {
									"Fn::Join": [
										"",
										[
											"URL_SUFFIX=",
											{
												"Ref": "AWS::URLSuffix"
											},
											" /tmp/bastion_bootstrap.sh",
											" --banner ",
											{
												"Ref": "BastionBanner"
											},
											" --enable ",
											{
												"Ref": "EnableBanner"
											},
											" --tcp-forwarding ",
											{
												"Ref": "EnableTCPForwarding"
											},
											" --x11-forwarding ",
											{
												"Ref": "EnableX11Forwarding"
											}
										]
									]
								}
							}
						}
					}
				}
			},
			"Properties": {
				"AssociatePublicIpAddress": "true",
				"PlacementTenancy": {
					"Ref": "BastionTenancy"
				},
				"KeyName": {
					"Ref": "KeyPairName"
				},
				"IamInstanceProfile": {
					"Ref": "BastionHostProfile"
				},
				"ImageId": {
					"Fn::If": [
						"UseOSImageOverride",
						{
							"Ref": "OSImageOverride"
						},
						{
							"Fn::FindInMap": [
								"AWSAMIRegionMap",
								{
									"Ref": "AWS::Region"
								},
								{
									"Fn::FindInMap": [
										"LinuxAMINameMap",
										{
											"Ref": "BastionAMIOS"
										},
										"Code"
									]
								}
							]
						}
					]
				},
				"SecurityGroups": [{
					"Ref": "BastionSecurityGroup"
				}],
				"InstanceType": {
					"Ref": "BastionInstanceType"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Sub": [
							"#!/bin/bash\nset -x\nfor e in $(echo \"${EnvironmentVariables}\" | tr ',' ' '); do\n  export $e\ndone\nexport PATH=$PATH:/usr/local/bin\n#cfn signaling functions\nyum install git -y || apt-get install -y git || zypper -n install git\n\nfunction cfn_fail\n{\n  cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup\n  exit 1\n}\n\nfunction cfn_success\n{\n  cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup\n  exit 0\n}\n\nuntil git clone https://github.com/aws-quickstart/quickstart-linux-utilities.git ; do echo \"Retrying\"; done\ncd /quickstart-linux-utilities;\nsource quickstart-cfn-tools.source;\nqs_update-os || qs_err;\nqs_bootstrap_pip || qs_err \" pip bootstrap failed \";\nqs_aws-cfn-bootstrap || qs_err \" cfn bootstrap failed \";\n\nEIP_LIST=\"${EIP1},${EIP2},${EIP3},${EIP4}\"\nCLOUDWATCHGROUP=${BastionMainLogGroup}\ncfn-init -v --stack '${AWS::StackName}' --resource BastionLaunchConfiguration --region ${AWS::Region} || cfn_fail\n[ $(qs_status) == 0 ] && cfn_success || cfn_fail\n",
							{
								"EIP2": {
									"Fn::If": [
										"2BastionCondition",
										{
											"Ref": "EIP2"
										},
										"Null"
									]
								},
								"EIP3": {
									"Fn::If": [
										"3BastionCondition",
										{
											"Ref": "EIP3"
										},
										"Null"
									]
								},
								"EIP4": {
									"Fn::If": [
										"4BastionCondition",
										{
											"Ref": "EIP4"
										},
										"Null"
									]
								}
							}
						]
					}
				}
			}
		},
		"BastionSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enables SSH Access to Bastion Hosts",
				"VpcId": {
					"Ref": "VPCID"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},
					{
						"IpProtocol": "icmp",
						"FromPort": "-1",
						"ToPort": "-1",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					}
				]
			}
		}
	},
	"Outputs": {
		"BastionAutoScalingGroup": {
			"Description": "Auto Scaling Group Reference ID",
			"Value": {
				"Ref": "BastionAutoScalingGroup"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-BastionAutoScalingGroup"
				}
			}
		},
		"EIP1": {
			"Description": "Elastic IP 1 for Bastion",
			"Value": {
				"Ref": "EIP1"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-EIP1"
				}
			}
		},
		"EIP2": {
			"Condition": "2BastionCondition",
			"Description": "Elastic IP 2 for Bastion",
			"Value": {
				"Ref": "EIP2"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-EIP2"
				}
			}
		},
		"EIP3": {
			"Condition": "3BastionCondition",
			"Description": "Elastic IP 3 for Bastion",
			"Value": {
				"Ref": "EIP3"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-EIP3"
				}
			}
		},
		"EIP4": {
			"Condition": "4BastionCondition",
			"Description": "Elastic IP 4 for Bastion",
			"Value": {
				"Ref": "EIP4"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-EIP4"
				}
			}
		},
		"CloudWatchLogs": {
			"Description": "CloudWatch Logs GroupName. Your SSH logs will be stored here.",
			"Value": {
				"Ref": "BastionMainLogGroup"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-CloudWatchLogs"
				}
			}
		},
		"BastionSecurityGroupID": {
			"Description": "Bastion Security Group ID",
			"Value": {
				"Ref": "BastionSecurityGroup"
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-BastionSecurityGroupID"
				}
			}
		},
		"BastionHostRole": {
			"Description": "Bastion IAM Role name",
			"Value": {
				"Fn::If": [
					"CreateIAMRole",
					{
						"Ref": "BastionHostRole"
					},
					{
						"Ref": "AlternativeIAMRole"
					}
				]
			},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-BastionHostRole"
				}
			}
		}
	}
}