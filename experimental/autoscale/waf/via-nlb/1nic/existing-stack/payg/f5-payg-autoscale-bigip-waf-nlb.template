{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Conditions": {
  "noCustomImageId": {
   "Fn::Equals": [
    "OPTIONAL",
    {
     "Ref": "customImageId"
    }
   ]
  },
  "noTargetGroup": {
   "Fn::Equals": [
    "none",
    {
     "Ref": "bigipNetworkLoadBalancerTargetGroupsArns"
    }
   ]
  },
  "optin": {
   "Fn::Equals": [
    "Yes",
    {
     "Ref": "allowUsageAnalytics"
    }
   ]
  },
  "useDefaultCert": {
   "Fn::Equals": [
    "default",
    {
     "Ref": "appCertificateS3Arn"
    }
   ]
  }
 },
 "Description": "Template v5.7.1: Deploys an AWS Auto Scaling group of F5 WAF PAYG instances. Example scaling policies and CloudWatch alarms are associated with the Auto Scaling group.",
 "Mappings": {
  "AWSBigipThrougput": {
   "1000Mbps": {
    "AdvancedWaf": "AdvancedWaf1000Mbps",
    "Best": "Best1000Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf1000Mbps"
   },
   "200Mbps": {
    "AdvancedWaf": "AdvancedWaf200Mbps",
    "Best": "Best200Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf200Mbps"
   },
   "25Mbps": {
    "AdvancedWaf": "AdvancedWaf25Mbps",
    "Best": "Best25Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf25Mbps"
   },
   "5000Mbps": {
    "Best": "Best5000Mbps"
   }
  },
  "BigipRegionMap": {
   "ap-east-1": {
    "AdvancedWaf1000Mbps": "ami-06f2a9891725947f8",
    "AdvancedWaf16vCPU": "ami-0cf6671e353068e73",
    "AdvancedWaf200Mbps": "ami-0b726955e2237907d",
    "AdvancedWaf25Mbps": "ami-062ff34b0aac15764",
    "AdvancedWaf8vCPU": "ami-0d987a4a2df200569",
    "Best10000Mbps": "ami-04ac62f066f7df1de",
    "Best1000Mbps": "ami-0879920db909414e4",
    "Best200Mbps": "ami-0f19737a4ef16b0af",
    "Best25Mbps": "ami-08e1acc3436b5ff84",
    "Best5000Mbps": "ami-05e11af6c3e39e704",
    "Better10000Mbps": "ami-00d9938b5c7522724",
    "Better1000Mbps": "ami-08c2e740c578bd510",
    "Better200Mbps": "ami-0162dff78d86a4c29",
    "Better25Mbps": "ami-0b50420b1d898a545",
    "Better5000Mbps": "ami-0a063803cbabfb82f",
    "Good10000Mbps": "ami-0226f24625561814e",
    "Good1000Mbps": "ami-0de2c3b0879f1dcd0",
    "Good16vCPU": "ami-07d4af14da9eb81dc",
    "Good200Mbps": "ami-0ecf3d2eb3d19f797",
    "Good25Mbps": "ami-049e7c890662aae3e",
    "Good5000Mbps": "ami-0755a8dab79949881",
    "PerAppVeAwaf200Mbps": "ami-0d1a2dad5b96a2050",
    "PerAppVeAwaf25Mbps": "ami-0b6a1d0e05763a9c3",
    "PerAppVeLtm200Mbps": "ami-073a07162f9f5b5c0",
    "PerAppVeLtm25Mbps": "ami-0d89d930f1d4bb2ba"
   },
   "ap-northeast-1": {
    "AdvancedWaf1000Mbps": "ami-042a000879fada737",
    "AdvancedWaf16vCPU": "ami-058f0de040c1b6257",
    "AdvancedWaf200Mbps": "ami-03719fb92c7a97e5a",
    "AdvancedWaf25Mbps": "ami-0d008410bd7f38674",
    "AdvancedWaf8vCPU": "ami-0bb67ee8a7fc3ed9b",
    "Best10000Mbps": "ami-06fd4d376708aa7c0",
    "Best1000Mbps": "ami-08e9071b232c16e1c",
    "Best200Mbps": "ami-010b1f01bf84a4bd7",
    "Best25Mbps": "ami-020797e9154a78ee2",
    "Best5000Mbps": "ami-01c15391a70167523",
    "Better10000Mbps": "ami-06feec5e5977b7cfc",
    "Better1000Mbps": "ami-0e21ef5735945ef7b",
    "Better200Mbps": "ami-0e8ddb984ce97b9f8",
    "Better25Mbps": "ami-07741ca8b799e5cb4",
    "Better5000Mbps": "ami-0f18624add281faa4",
    "Good10000Mbps": "ami-003423cf2740dc0ff",
    "Good1000Mbps": "ami-0d26a7c453cff9322",
    "Good16vCPU": "ami-030293e3cd9a8034b",
    "Good200Mbps": "ami-057d50b1d2073b9ee",
    "Good25Mbps": "ami-078c84a8647ed3c13",
    "Good5000Mbps": "ami-0327972dd93426992",
    "PerAppVeAwaf200Mbps": "ami-053afac0c177c62bb",
    "PerAppVeAwaf25Mbps": "ami-0148186650e44b11c",
    "PerAppVeLtm200Mbps": "ami-025d0ce1e909237cd",
    "PerAppVeLtm25Mbps": "ami-0d66ead67687d6337"
   },
   "ap-northeast-2": {
    "AdvancedWaf1000Mbps": "ami-081199ac84a948e4e",
    "AdvancedWaf16vCPU": "ami-05845598c285c9a52",
    "AdvancedWaf200Mbps": "ami-000761e894d6cd095",
    "AdvancedWaf25Mbps": "ami-01debc86ecb3282e5",
    "AdvancedWaf8vCPU": "ami-08d4f02bd0d97cf23",
    "Best10000Mbps": "ami-0f9b53cfdabfb706f",
    "Best1000Mbps": "ami-094dd9bd04d98f099",
    "Best200Mbps": "ami-07d23fc17cae47d87",
    "Best25Mbps": "ami-0e8ea19680433245e",
    "Best5000Mbps": "ami-028b08b0294650910",
    "Better10000Mbps": "ami-00f4dcb911cd37b87",
    "Better1000Mbps": "ami-0a649ce4bad6bb5c3",
    "Better200Mbps": "ami-02eedb5314a005d57",
    "Better25Mbps": "ami-0d43a89b36b7adb69",
    "Better5000Mbps": "ami-0ce162b09a951742b",
    "Good10000Mbps": "ami-02d6f92eb786ec359",
    "Good1000Mbps": "ami-09622d8fbbe6f45e2",
    "Good16vCPU": "ami-0c6f9dcaeba2af785",
    "Good200Mbps": "ami-044e18f2aba90b394",
    "Good25Mbps": "ami-064fa2e60305f8401",
    "Good5000Mbps": "ami-00b1e3a121b67dd11",
    "PerAppVeAwaf200Mbps": "ami-0a3866828ac2520d2",
    "PerAppVeAwaf25Mbps": "ami-0440cbbfb75633318",
    "PerAppVeLtm200Mbps": "ami-05d053dbb6d5e1d1c",
    "PerAppVeLtm25Mbps": "ami-0a237519ce4332310"
   },
   "ap-south-1": {
    "AdvancedWaf1000Mbps": "ami-0d484fbbc799d9726",
    "AdvancedWaf16vCPU": "ami-073239567e8925360",
    "AdvancedWaf200Mbps": "ami-0676904937799170c",
    "AdvancedWaf25Mbps": "ami-05e3efdf907128e8f",
    "AdvancedWaf8vCPU": "ami-0bf123e5aefa61906",
    "Best10000Mbps": "ami-04cc8a9d8047c9120",
    "Best1000Mbps": "ami-033e72c50165bb396",
    "Best200Mbps": "ami-0bc69ddda9605aa95",
    "Best25Mbps": "ami-0d455c02fbd1c4694",
    "Best5000Mbps": "ami-0ec7cc96f4182e86b",
    "Better10000Mbps": "ami-032ae92389acf2793",
    "Better1000Mbps": "ami-0082fe05fefa27099",
    "Better200Mbps": "ami-027835ba3c2d45680",
    "Better25Mbps": "ami-016b2e290da25c166",
    "Better5000Mbps": "ami-0c6a4352cbea8bb8f",
    "Good10000Mbps": "ami-0f2c70bd6ae15e0aa",
    "Good1000Mbps": "ami-096e7c43f025aee79",
    "Good16vCPU": "ami-0de12e31baaab8f91",
    "Good200Mbps": "ami-0034da1ef410cc15b",
    "Good25Mbps": "ami-05b43cf622964a6d8",
    "Good5000Mbps": "ami-068d85441164fe56b",
    "PerAppVeAwaf200Mbps": "ami-020df59ec0adb1975",
    "PerAppVeAwaf25Mbps": "ami-093c48188f59ef898",
    "PerAppVeLtm200Mbps": "ami-02a15b41794599aba",
    "PerAppVeLtm25Mbps": "ami-088b7c5c7829a0335"
   },
   "ap-southeast-1": {
    "AdvancedWaf1000Mbps": "ami-02425992617882e13",
    "AdvancedWaf16vCPU": "ami-0e67adbd2f81757ef",
    "AdvancedWaf200Mbps": "ami-08b523aab801655d1",
    "AdvancedWaf25Mbps": "ami-0ec219193fe2b1efe",
    "AdvancedWaf8vCPU": "ami-00387b00d04cef603",
    "Best10000Mbps": "ami-07864958c0fb8d53f",
    "Best1000Mbps": "ami-0b8e62d7bcdfb6f1d",
    "Best200Mbps": "ami-0f29a99455c1a9d07",
    "Best25Mbps": "ami-0575516b93a7b0695",
    "Best5000Mbps": "ami-0417690f518d55eaf",
    "Better10000Mbps": "ami-0d87b0f073428ce52",
    "Better1000Mbps": "ami-0654818972805bdd3",
    "Better200Mbps": "ami-0417af8ab67006684",
    "Better25Mbps": "ami-098c2b15c5303fc19",
    "Better5000Mbps": "ami-03bc019eb9d06e381",
    "Good10000Mbps": "ami-08d778e9a0d2d2af5",
    "Good1000Mbps": "ami-056c1ef445cd354e3",
    "Good16vCPU": "ami-04f58953de8e46555",
    "Good200Mbps": "ami-0c90d02da0ef4482a",
    "Good25Mbps": "ami-0d3e7606b192e85e7",
    "Good5000Mbps": "ami-0dd702c9cb0c70bd7",
    "PerAppVeAwaf200Mbps": "ami-0ab01add61af04a83",
    "PerAppVeAwaf25Mbps": "ami-061ede234a9b932e6",
    "PerAppVeLtm200Mbps": "ami-0ead6df9785bed40c",
    "PerAppVeLtm25Mbps": "ami-0c677f100d25e2a69"
   },
   "ap-southeast-2": {
    "AdvancedWaf1000Mbps": "ami-0526e88174ba8ac79",
    "AdvancedWaf16vCPU": "ami-0151471fa1ba9ad28",
    "AdvancedWaf200Mbps": "ami-0704737eb6646e1ce",
    "AdvancedWaf25Mbps": "ami-0e0988a04734960db",
    "AdvancedWaf8vCPU": "ami-05580fa8106cbeb35",
    "Best10000Mbps": "ami-040225dbaf0ab7564",
    "Best1000Mbps": "ami-019a4282595c7ed0a",
    "Best200Mbps": "ami-0297ab2eeafb70555",
    "Best25Mbps": "ami-0b0dc7a8afa39b147",
    "Best5000Mbps": "ami-02a9d489b61877de3",
    "Better10000Mbps": "ami-032a4047207755468",
    "Better1000Mbps": "ami-0139e55903f32cf78",
    "Better200Mbps": "ami-0a655ea6b9280a8c9",
    "Better25Mbps": "ami-004bc85db5b110716",
    "Better5000Mbps": "ami-0d1a2dbb35ed9926e",
    "Good10000Mbps": "ami-0649252f21cf57c73",
    "Good1000Mbps": "ami-0a295a901a6deccb9",
    "Good16vCPU": "ami-0c83f8695993f9d0c",
    "Good200Mbps": "ami-0c5fa2ddc1e237c74",
    "Good25Mbps": "ami-0ced2f3ca3ec50c94",
    "Good5000Mbps": "ami-0d52b90a73fb45bf5",
    "PerAppVeAwaf200Mbps": "ami-0bfa2e84194222aae",
    "PerAppVeAwaf25Mbps": "ami-0217deef1d7ff8d85",
    "PerAppVeLtm200Mbps": "ami-0a06bf5ff3f99e0c8",
    "PerAppVeLtm25Mbps": "ami-03676bc1f4d1a63fe"
   },
   "ca-central-1": {
    "AdvancedWaf1000Mbps": "ami-0ad1849458687b948",
    "AdvancedWaf16vCPU": "ami-043b91131bc59f022",
    "AdvancedWaf200Mbps": "ami-0b3826a3f2cb007a7",
    "AdvancedWaf25Mbps": "ami-02c081cfada071176",
    "AdvancedWaf8vCPU": "ami-025896218596c673e",
    "Best10000Mbps": "ami-049a4868ca2f41035",
    "Best1000Mbps": "ami-0419bbbcf7e67088a",
    "Best200Mbps": "ami-0cbfb3e578b76d3ef",
    "Best25Mbps": "ami-03a45af5ca23b0475",
    "Best5000Mbps": "ami-09ddd74ce1eeed7b1",
    "Better10000Mbps": "ami-051090f4a6bbbc79a",
    "Better1000Mbps": "ami-0007f2aed8ccc74bf",
    "Better200Mbps": "ami-0f51c4290db274e4c",
    "Better25Mbps": "ami-07741329ec24d0101",
    "Better5000Mbps": "ami-00380e98f33a0f8c9",
    "Good10000Mbps": "ami-0740c6b892acffc45",
    "Good1000Mbps": "ami-08802e7a1c11616a2",
    "Good16vCPU": "ami-0ac282a0a831c1dcf",
    "Good200Mbps": "ami-0e70d52244ed698b2",
    "Good25Mbps": "ami-00f5981114fed5072",
    "Good5000Mbps": "ami-0f3a249f773f97ad4",
    "PerAppVeAwaf200Mbps": "ami-017d3f86015183215",
    "PerAppVeAwaf25Mbps": "ami-0386a5d9ca2f44d20",
    "PerAppVeLtm200Mbps": "ami-0d400035338cd9267",
    "PerAppVeLtm25Mbps": "ami-0d11f7d49a45f6cde"
   },
   "eu-central-1": {
    "AdvancedWaf1000Mbps": "ami-0df40f2fd4924e4da",
    "AdvancedWaf16vCPU": "ami-04625b6573dbe9732",
    "AdvancedWaf200Mbps": "ami-0ea3f09b4b1e7177b",
    "AdvancedWaf25Mbps": "ami-06c3d479a6c980168",
    "AdvancedWaf8vCPU": "ami-0f8f64973d39daba1",
    "Best10000Mbps": "ami-07268731056aad947",
    "Best1000Mbps": "ami-0385dfde79f7719f8",
    "Best200Mbps": "ami-096e4ad7ac184ebca",
    "Best25Mbps": "ami-0c8cd7942729c9aa9",
    "Best5000Mbps": "ami-0ef107fbf4d667050",
    "Better10000Mbps": "ami-042a1a8ce15b11602",
    "Better1000Mbps": "ami-0f2c83298b346182f",
    "Better200Mbps": "ami-0153f656dacf74e66",
    "Better25Mbps": "ami-0fc099563ddd82c7b",
    "Better5000Mbps": "ami-0582b9b7ee382a9c8",
    "Good10000Mbps": "ami-0a35ab52897ddaade",
    "Good1000Mbps": "ami-07ffabb156205827a",
    "Good16vCPU": "ami-012465a80befd7b11",
    "Good200Mbps": "ami-04693593af6a01d6a",
    "Good25Mbps": "ami-04f540f107f27f413",
    "Good5000Mbps": "ami-08b5e12561d83acb2",
    "PerAppVeAwaf200Mbps": "ami-09cebef29fa7032b6",
    "PerAppVeAwaf25Mbps": "ami-0cab4a5bee032df5e",
    "PerAppVeLtm200Mbps": "ami-04ac152f8c9be80ac",
    "PerAppVeLtm25Mbps": "ami-03ccd2884405ce92e"
   },
   "eu-north-1": {
    "AdvancedWaf1000Mbps": "ami-0ae1538740e7c2b49",
    "AdvancedWaf16vCPU": "ami-067c634d82d0641b4",
    "AdvancedWaf200Mbps": "ami-019c715424aa29e6f",
    "AdvancedWaf25Mbps": "ami-057426aaff3e1e32f",
    "AdvancedWaf8vCPU": "ami-0fe733e3c50126545",
    "Best10000Mbps": "ami-015f496e7d71c828c",
    "Best1000Mbps": "ami-0b661ef5992ba010c",
    "Best200Mbps": "ami-0068cd511eba5a176",
    "Best25Mbps": "ami-0f005cc1d66b47803",
    "Best5000Mbps": "ami-03fd7f74974385a1d",
    "Better10000Mbps": "ami-0f7444a13d3bd76e5",
    "Better1000Mbps": "ami-0928229d283b3e3b2",
    "Better200Mbps": "ami-029f79f4e01b09182",
    "Better25Mbps": "ami-092734383f1c711eb",
    "Better5000Mbps": "ami-0558f399aa7f95988",
    "Good10000Mbps": "ami-0d34cd32365de887b",
    "Good1000Mbps": "ami-0ca7ea8e36642ef3a",
    "Good16vCPU": "ami-03f97a9e35fe328a9",
    "Good200Mbps": "ami-0123ba171ea25be97",
    "Good25Mbps": "ami-015472840c9d2fd90",
    "Good5000Mbps": "ami-04f3611196ab62553",
    "PerAppVeAwaf200Mbps": "ami-0193a6641209ac735",
    "PerAppVeAwaf25Mbps": "ami-051e5df90cce256aa",
    "PerAppVeLtm200Mbps": "ami-0e8d5575253e092c2",
    "PerAppVeLtm25Mbps": "ami-045901e1eb2e3f3b7"
   },
   "eu-west-1": {
    "AdvancedWaf1000Mbps": "ami-0e83fb6e20d662e64",
    "AdvancedWaf16vCPU": "ami-0ec3c8d3ad145b96b",
    "AdvancedWaf200Mbps": "ami-0139b10bb54807371",
    "AdvancedWaf25Mbps": "ami-09a87b1d3eb082134",
    "AdvancedWaf8vCPU": "ami-083b1942cddad450a",
    "Best10000Mbps": "ami-0f094f52b045d73e1",
    "Best1000Mbps": "ami-076910cb714693b99",
    "Best200Mbps": "ami-04d260b94e2208014",
    "Best25Mbps": "ami-0a163e12e6c1c8aa8",
    "Best5000Mbps": "ami-0b763d46da37d4b6e",
    "Better10000Mbps": "ami-0af6a5cea513433fd",
    "Better1000Mbps": "ami-01346ace22c6ff2ea",
    "Better200Mbps": "ami-0bcac477822b542ab",
    "Better25Mbps": "ami-0c089451960230ed8",
    "Better5000Mbps": "ami-0374ccc836223ea6e",
    "Good10000Mbps": "ami-0ec565fef11659641",
    "Good1000Mbps": "ami-0009fd42450d46ead",
    "Good16vCPU": "ami-0c9e579b1a3490f9e",
    "Good200Mbps": "ami-090a6e0c42c2f95ab",
    "Good25Mbps": "ami-011fe81e940e765c2",
    "Good5000Mbps": "ami-004451efbcfa80b20",
    "PerAppVeAwaf200Mbps": "ami-00ec4ac5d726bacf4",
    "PerAppVeAwaf25Mbps": "ami-03bee7a660ebe3a8e",
    "PerAppVeLtm200Mbps": "ami-0c6f573eb938bee69",
    "PerAppVeLtm25Mbps": "ami-0e39dc20f1e795a5a"
   },
   "eu-west-2": {
    "AdvancedWaf1000Mbps": "ami-01622e877519adc78",
    "AdvancedWaf16vCPU": "ami-03c9fedf728da97cc",
    "AdvancedWaf200Mbps": "ami-095ab1acd2913a556",
    "AdvancedWaf25Mbps": "ami-0f8dfc9f3e44d0687",
    "AdvancedWaf8vCPU": "ami-0ca62f2ab8aa63cb1",
    "Best10000Mbps": "ami-05b1306c8fe1f6522",
    "Best1000Mbps": "ami-0a86c3063480fb974",
    "Best200Mbps": "ami-08aa7070211d6c50a",
    "Best25Mbps": "ami-01a73c06de111cc9c",
    "Best5000Mbps": "ami-04dcc9ca726df361a",
    "Better10000Mbps": "ami-01534ea4763813341",
    "Better1000Mbps": "ami-01606ec152aaee82c",
    "Better200Mbps": "ami-0c9241e463bf4f6a6",
    "Better25Mbps": "ami-0fe284d68b7936ab6",
    "Better5000Mbps": "ami-0402240c1aff34524",
    "Good10000Mbps": "ami-0b6ebf18b046b5978",
    "Good1000Mbps": "ami-0dfd8c8580d5e2bb8",
    "Good16vCPU": "ami-01927d25009906d16",
    "Good200Mbps": "ami-0e9d7ff0b22a330bf",
    "Good25Mbps": "ami-013087c2e00d296cb",
    "Good5000Mbps": "ami-09a43f564f083fb60",
    "PerAppVeAwaf200Mbps": "ami-029530f875e26e461",
    "PerAppVeAwaf25Mbps": "ami-0cd11efee1b9d513b",
    "PerAppVeLtm200Mbps": "ami-01b020a4a6335eab9",
    "PerAppVeLtm25Mbps": "ami-0627fe42cade3206e"
   },
   "eu-west-3": {
    "AdvancedWaf1000Mbps": "ami-06094c844f618b39d",
    "AdvancedWaf16vCPU": "ami-00ca8edd266fdb930",
    "AdvancedWaf200Mbps": "ami-079f76172f1fc3481",
    "AdvancedWaf25Mbps": "ami-0efa67697f9a0971b",
    "AdvancedWaf8vCPU": "ami-07b8500cab6b3651c",
    "Best10000Mbps": "ami-088ad937d86e7fda7",
    "Best1000Mbps": "ami-027b7140ec31ddcd7",
    "Best200Mbps": "ami-0f0916d1fd362bc6b",
    "Best25Mbps": "ami-0844cee01e74e7c4e",
    "Best5000Mbps": "ami-0333c6e5a8d51312a",
    "Better10000Mbps": "ami-0b17a5044c5b5b7ab",
    "Better1000Mbps": "ami-0ac3de808d16f2a97",
    "Better200Mbps": "ami-0fa21d9b72fea8981",
    "Better25Mbps": "ami-08bf28d69931ecad7",
    "Better5000Mbps": "ami-0e82140ee16b88338",
    "Good10000Mbps": "ami-0267c9439d0129684",
    "Good1000Mbps": "ami-075d0d881c52187cc",
    "Good16vCPU": "ami-01af9a580d40d9294",
    "Good200Mbps": "ami-0062f3e652061b398",
    "Good25Mbps": "ami-004584db7ba6321ef",
    "Good5000Mbps": "ami-0a3681ace36d241ee",
    "PerAppVeAwaf200Mbps": "ami-03335afcf066f7575",
    "PerAppVeAwaf25Mbps": "ami-055ddbdf15887407e",
    "PerAppVeLtm200Mbps": "ami-02244d9ffb8580266",
    "PerAppVeLtm25Mbps": "ami-0a1eeb30bd88461eb"
   },
   "me-south-1": {
    "AdvancedWaf1000Mbps": "ami-025f698c0f47b5396",
    "AdvancedWaf16vCPU": "ami-03e28704a3dc4508d",
    "AdvancedWaf200Mbps": "ami-07e5fe53978aecb86",
    "AdvancedWaf25Mbps": "ami-07e731e689694b44c",
    "AdvancedWaf8vCPU": "ami-011943216bf939d7f",
    "Best10000Mbps": "ami-0792fe7dc0c90b8b4",
    "Best1000Mbps": "ami-0e647797ac68d4432",
    "Best200Mbps": "ami-0e3283efae3c68a7d",
    "Best25Mbps": "ami-018734ebd61bd3ace",
    "Best5000Mbps": "ami-007011ef472f6152d",
    "Better10000Mbps": "ami-0787413a51cc2a707",
    "Better1000Mbps": "ami-0fe25d641217d557a",
    "Better200Mbps": "ami-0a4d2636b0dfc3195",
    "Better25Mbps": "ami-06845fa1124f585b5",
    "Better5000Mbps": "ami-0e340edcfe4ce5027",
    "Good10000Mbps": "ami-0d3de094204735ef0",
    "Good1000Mbps": "ami-08299df49b8755cab",
    "Good16vCPU": "ami-0f71d694baca54d0f",
    "Good200Mbps": "ami-0119038def86d8037",
    "Good25Mbps": "ami-0293b6120cc6936c6",
    "Good5000Mbps": "ami-0e3872d1d6091fdf0",
    "PerAppVeAwaf200Mbps": "ami-007ce703b87207872",
    "PerAppVeAwaf25Mbps": "ami-0caba7e7d48421448",
    "PerAppVeLtm200Mbps": "ami-0ab90d8a8e41fdace",
    "PerAppVeLtm25Mbps": "ami-09d1687fdadf9ff46"
   },
   "sa-east-1": {
    "AdvancedWaf1000Mbps": "ami-00d772b8f79c0ed7d",
    "AdvancedWaf16vCPU": "ami-034df340d43d2f62e",
    "AdvancedWaf200Mbps": "ami-0b67e63f773836031",
    "AdvancedWaf25Mbps": "ami-0cf034a7bf7c7cf0a",
    "AdvancedWaf8vCPU": "ami-06f2fbbaad671c41a",
    "Best10000Mbps": "ami-00471d0b35a24fb70",
    "Best1000Mbps": "ami-043a5782ee1d312a6",
    "Best200Mbps": "ami-0ab4a963bfdec551c",
    "Best25Mbps": "ami-07a4edde3add1e320",
    "Best5000Mbps": "ami-09feb4f5ef40b7010",
    "Better10000Mbps": "ami-03d8fbc35f47661b8",
    "Better1000Mbps": "ami-0cbb32af698bebdc2",
    "Better200Mbps": "ami-008be37244fcb532a",
    "Better25Mbps": "ami-00b0533db9d5307ce",
    "Better5000Mbps": "ami-03bb7478c5fb0635f",
    "Good10000Mbps": "ami-04f0af18040dc185d",
    "Good1000Mbps": "ami-0118f31a6edf42552",
    "Good16vCPU": "ami-0f5fd70e91570c215",
    "Good200Mbps": "ami-025ea7adea08af5d5",
    "Good25Mbps": "ami-095a6e4df7750536e",
    "Good5000Mbps": "ami-02318d28735454ad6",
    "PerAppVeAwaf200Mbps": "ami-01bfb4e856bcb8ebb",
    "PerAppVeAwaf25Mbps": "ami-023ad9a4690eb34d1",
    "PerAppVeLtm200Mbps": "ami-0af4623f9569e05d7",
    "PerAppVeLtm25Mbps": "ami-0aadd411a895cb986"
   },
   "us-east-1": {
    "AdvancedWaf1000Mbps": "ami-0415c5b07fac379da",
    "AdvancedWaf16vCPU": "ami-070086e63078748fa",
    "AdvancedWaf200Mbps": "ami-03bec238a83b548fd",
    "AdvancedWaf25Mbps": "ami-074f4cff1aafd1108",
    "AdvancedWaf8vCPU": "ami-0c64a1b5794e8b139",
    "Best10000Mbps": "ami-097367d9292b745a6",
    "Best1000Mbps": "ami-0c7a6494dd6b5b6f9",
    "Best200Mbps": "ami-06dc68a7e98339119",
    "Best25Mbps": "ami-0608df65422c39ead",
    "Best5000Mbps": "ami-03e1bcaa01aebffd8",
    "Better10000Mbps": "ami-0ef170ba05c8a2b04",
    "Better1000Mbps": "ami-08b5c719a5769249a",
    "Better200Mbps": "ami-03a464a815023c85a",
    "Better25Mbps": "ami-0a6b4a1889304929a",
    "Better5000Mbps": "ami-07d3ccb638cb20a8e",
    "Good10000Mbps": "ami-07b69fc089d4cdd79",
    "Good1000Mbps": "ami-01d5d82476a5f2290",
    "Good16vCPU": "ami-03aa3139dd7c45e8f",
    "Good200Mbps": "ami-0b398ead6ea28d206",
    "Good25Mbps": "ami-0aa2513991263b19e",
    "Good5000Mbps": "ami-03c4577b3019df669",
    "PerAppVeAwaf200Mbps": "ami-06f2613d9670555e0",
    "PerAppVeAwaf25Mbps": "ami-02464e19d857734c5",
    "PerAppVeLtm200Mbps": "ami-08b9f743ed85c5478",
    "PerAppVeLtm25Mbps": "ami-01660b603211f995f"
   },
   "us-east-2": {
    "AdvancedWaf1000Mbps": "ami-0deae13f2c4d0aef8",
    "AdvancedWaf16vCPU": "ami-01d5bbf569c360253",
    "AdvancedWaf200Mbps": "ami-0ed78a7f332807bfb",
    "AdvancedWaf25Mbps": "ami-02e87532030cacb0a",
    "AdvancedWaf8vCPU": "ami-03b90b68467b38568",
    "Best10000Mbps": "ami-0067a2313ab696d62",
    "Best1000Mbps": "ami-02f9991746c6171d2",
    "Best200Mbps": "ami-07fbb6d54f5334e3e",
    "Best25Mbps": "ami-0b1e9488f2ae95c78",
    "Best5000Mbps": "ami-06d620aaf0a9d8e7a",
    "Better10000Mbps": "ami-0d640dbfd1ec533a6",
    "Better1000Mbps": "ami-03ed5a70be26e59f0",
    "Better200Mbps": "ami-025d02372d5041265",
    "Better25Mbps": "ami-04f7c38ca60e945d7",
    "Better5000Mbps": "ami-0a683b7a677c33656",
    "Good10000Mbps": "ami-09ed97064b832be35",
    "Good1000Mbps": "ami-0e3588ddac625db1b",
    "Good16vCPU": "ami-0f6be4b0bc18f57f5",
    "Good200Mbps": "ami-02f9e145426af76e7",
    "Good25Mbps": "ami-0c0a27aff12fc8a06",
    "Good5000Mbps": "ami-0958dcfb0caf72807",
    "PerAppVeAwaf200Mbps": "ami-0988d34db1cfdc2ed",
    "PerAppVeAwaf25Mbps": "ami-0ae96fc34249c0408",
    "PerAppVeLtm200Mbps": "ami-00f53f5481b5d2ce4",
    "PerAppVeLtm25Mbps": "ami-09d1eefa89e4619e0"
   },
   "us-gov-east-1": {
    "AdvancedWaf1000Mbps": "ami-0ae88333cd5a72f26",
    "AdvancedWaf16vCPU": "ami-0d03aa8d432ab05a3",
    "AdvancedWaf200Mbps": "ami-056fe7db2d9bf121c",
    "AdvancedWaf25Mbps": "ami-0865c02316113de1c",
    "AdvancedWaf8vCPU": "ami-0ac7859bd818388f2",
    "Best10000Mbps": "ami-07bb62dffc8762254",
    "Best1000Mbps": "ami-0e52b9f5961652d90",
    "Best200Mbps": "ami-0bd52cd1082f8436d",
    "Best25Mbps": "ami-0ea602f0bd91a252e",
    "Best5000Mbps": "ami-0fa839cf718c8d466",
    "Better10000Mbps": "ami-09a0cb3f855805e89",
    "Better1000Mbps": "ami-0104f69d49272dedd",
    "Better200Mbps": "ami-0836f4c37cdb4af02",
    "Better25Mbps": "ami-0d866e86c1b6d9124",
    "Better5000Mbps": "ami-097074ecc81630104",
    "Good10000Mbps": "ami-0d7f41aee05b14b55",
    "Good1000Mbps": "ami-05e4761c87fec6035",
    "Good16vCPU": "ami-0b4eeff55ad96fe64",
    "Good200Mbps": "ami-08d6e8502f91da7b2",
    "Good25Mbps": "ami-07d3723ebb0eadc3b",
    "Good5000Mbps": "ami-016bdf300cebfe107",
    "PerAppVeAwaf200Mbps": "ami-052a7eeb8547933bc",
    "PerAppVeAwaf25Mbps": "ami-02e1873dd307d8ca1",
    "PerAppVeLtm200Mbps": "ami-0d172f469a4cbc2e6",
    "PerAppVeLtm25Mbps": "ami-0a676450c23390a8d"
   },
   "us-gov-west-1": {
    "AdvancedWaf1000Mbps": "ami-09c819a73b028997c",
    "AdvancedWaf16vCPU": "ami-0baff626f6cb94cfc",
    "AdvancedWaf200Mbps": "ami-00ff43dbf8de8ecc1",
    "AdvancedWaf25Mbps": "ami-061df03261d8fc3ec",
    "AdvancedWaf8vCPU": "ami-021e3b91d8e13f81d",
    "Best10000Mbps": "ami-093e334199198d090",
    "Best1000Mbps": "ami-09fb00370efd88e6c",
    "Best200Mbps": "ami-09b2f118f4d34105c",
    "Best25Mbps": "ami-0e7576b19df6e8124",
    "Best5000Mbps": "ami-0f2a25a7749eb4591",
    "Better10000Mbps": "ami-08812daa834b84923",
    "Better1000Mbps": "ami-017c0fa833c240021",
    "Better200Mbps": "ami-07c97fd3ebba2d844",
    "Better25Mbps": "ami-00d494275a77a7feb",
    "Better5000Mbps": "ami-0109db63891c9c87c",
    "Good10000Mbps": "ami-0fed02c5604ccfcf6",
    "Good1000Mbps": "ami-054aa2768b5f00ad0",
    "Good16vCPU": "ami-00daf49476c30720f",
    "Good200Mbps": "ami-05a661c270ad34911",
    "Good25Mbps": "ami-0d13ae62e30c4355d",
    "Good5000Mbps": "ami-0127af78fed7ad052",
    "PerAppVeAwaf200Mbps": "ami-00bafb24c6cf61115",
    "PerAppVeAwaf25Mbps": "ami-045d3640a4f7e5659",
    "PerAppVeLtm200Mbps": "ami-0e36de6058c0f6f72",
    "PerAppVeLtm25Mbps": "ami-09e23d5fb12d925cf"
   },
   "us-west-1": {
    "AdvancedWaf1000Mbps": "ami-0f24d36018dde9aff",
    "AdvancedWaf16vCPU": "ami-029c9af6c31b5cdb5",
    "AdvancedWaf200Mbps": "ami-0cc3112674b669703",
    "AdvancedWaf25Mbps": "ami-03706c0299a25e24b",
    "AdvancedWaf8vCPU": "ami-0fccbcebeeec107d7",
    "Best10000Mbps": "ami-09d13a3786a2c2bef",
    "Best1000Mbps": "ami-04773fc80b1ab5a05",
    "Best200Mbps": "ami-008e577efcc531613",
    "Best25Mbps": "ami-0d3a086ba7d982359",
    "Best5000Mbps": "ami-0677d5dc7e5be51f1",
    "Better10000Mbps": "ami-005cd31b10bca2b1e",
    "Better1000Mbps": "ami-0c1d77d9733008b22",
    "Better200Mbps": "ami-0cd8ecc3953b0a596",
    "Better25Mbps": "ami-076e1d788cca912b2",
    "Better5000Mbps": "ami-01d77f5497be4f86c",
    "Good10000Mbps": "ami-09f7a32839db38728",
    "Good1000Mbps": "ami-0270e43fb08092a18",
    "Good16vCPU": "ami-0eb66f41c2e96ea9b",
    "Good200Mbps": "ami-06e5c3dcddda43142",
    "Good25Mbps": "ami-0c292f5f98b3c7456",
    "Good5000Mbps": "ami-0f4fe0067b11420e9",
    "PerAppVeAwaf200Mbps": "ami-0598b93b0d30f4209",
    "PerAppVeAwaf25Mbps": "ami-09714f62c9e1e6375",
    "PerAppVeLtm200Mbps": "ami-034fe60b19c50a6da",
    "PerAppVeLtm25Mbps": "ami-04c9128816cd55b3d"
   },
   "us-west-2": {
    "AdvancedWaf1000Mbps": "ami-0bb7cc922726c5647",
    "AdvancedWaf16vCPU": "ami-0a90352ee3e23c8d7",
    "AdvancedWaf200Mbps": "ami-046490e52f4d01dc2",
    "AdvancedWaf25Mbps": "ami-042ff32d1f7677784",
    "AdvancedWaf8vCPU": "ami-0aabe39971894f2b1",
    "Best10000Mbps": "ami-0afc277f1fff60bab",
    "Best1000Mbps": "ami-09b14906437f3d5e7",
    "Best200Mbps": "ami-00953a36c56525daa",
    "Best25Mbps": "ami-04003b4eb3f9d30d8",
    "Best5000Mbps": "ami-0e73b42422d14e042",
    "Better10000Mbps": "ami-004e23fc417d8fc5e",
    "Better1000Mbps": "ami-0373e3930744f8ad5",
    "Better200Mbps": "ami-088696de50e3b0549",
    "Better25Mbps": "ami-0b3b98185580c7ec5",
    "Better5000Mbps": "ami-0fa7f29ed398b6d8f",
    "Good10000Mbps": "ami-08c783d85e09443df",
    "Good1000Mbps": "ami-0511abc562f5fb990",
    "Good16vCPU": "ami-0866d90266e6fdd2f",
    "Good200Mbps": "ami-0f86450d09823b978",
    "Good25Mbps": "ami-0befcd253451c60cf",
    "Good5000Mbps": "ami-055b9a2cf939d26d2",
    "PerAppVeAwaf200Mbps": "ami-0ed249998fe160038",
    "PerAppVeAwaf25Mbps": "ami-01233d94dc7aa65aa",
    "PerAppVeLtm200Mbps": "ami-0c8d7c03168ce3ed8",
    "PerAppVeLtm25Mbps": "ami-061d02f834e2f8942"
   }
  },
  "Transformations": {
   "Boolean": {
    "No": "false",
    "Yes": "true"
   }
  }
 },
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "DEPLOYMENT"
     },
     "Parameters": [
      "deploymentName"
     ]
    },
    {
     "Label": {
      "default": "NETWORKING CONFIGURATION"
     },
     "Parameters": [
      "Vpc",
      "availabilityZones",
      "subnets",
      "restrictedSrcAddress",
      "restrictedSrcAddressApp",
      "bigipNetworkLoadBalancerTargetGroupsArns",
      "provisionPublicIP"
     ]
    },
    {
     "Label": {
      "default": "INSTANCE CONFIGURATION"
     },
     "Parameters": [
      "sshKey",
      "instanceType",
      "throughput",
      "imageName",
      "customImageId",
      "adminUsername",
      "managementGuiPort",
      "timezone",
      "ntpServer",
      "bigIpModules"
     ]
    },
    {
     "Label": {
      "default": "AUTO SCALING CONFIGURATION"
     },
     "Parameters": [
      "scalingMinSize",
      "scalingMaxSize",
      "scaleDownBytesThreshold",
      "scaleUpBytesThreshold",
      "lowCpuThreshold",
      "highCpuThreshold",
      "notificationEmail"
     ]
    },
    {
     "Label": {
      "default": "VIRTUAL SERVICE CONFIGURATION"
     },
     "Parameters": [
      "virtualServicePort",
      "appCertificateS3Arn",
      "applicationPort",
      "appInternalDnsName",
      "applicationPoolTagKey",
      "applicationPoolTagValue",
      "declarationUrl",
      "policyLevel"
     ]
    },
    {
     "Label": {
      "default": "TAGS"
     },
     "Parameters": [
      "application",
      "environment",
      "group",
      "owner",
      "costcenter"
     ]
    },
    {},
    {
     "Label": {
      "default": "TEMPLATE ANALYTICS"
     },
     "Parameters": [
      "allowUsageAnalytics",
      "allowPhoneHome"
     ]
    }
   ],
   "ParameterLabels": {
    "Vpc": {
     "default": "VPC ID"
    },
    "adminUsername": {
     "default": "BIG-IP Admin User for clustering"
    },
    "allowPhoneHome": {
     "default": "Send Anonymous Device Statistics to F5"
    },
    "allowUsageAnalytics": {
     "default": "Send Anonymous Template Statistics to F5"
    },
    "appCertificateS3Arn": {
     "default": "S3 ARN of the SSL Certificate used for Application"
    },
    "appInternalDnsName": {
     "default": "Application Pool DNS"
    },
    "application": {
     "default": "Application"
    },
    "applicationPoolTagKey": {
     "default": "Application Pool Tag Key"
    },
    "applicationPoolTagValue": {
     "default": "Application Pool Tag Value"
    },
    "applicationPort": {
     "default": "Application Pool Member Port"
    },
    "availabilityZones": {
     "default": "Availability Zone(s)"
    },
    "bigIpModules": {
     "default": "BIG-IP Modules"
    },
    "bigipNetworkLoadBalancerTargetGroupsArns": {
     "default": "Target Group(s) of Network Load Balancer for BIG-IP VEs"
    },
    "costcenter": {
     "default": "Cost Center"
    },
    "customImageId": {
     "default": "Custom Image Id"
    },
    "declarationUrl": {
     "default": "AS3 Declaration URL"
    },
    "deploymentName": {
     "default": "Deployment Name"
    },
    "environment": {
     "default": "Environment"
    },
    "group": {
     "default": "Group"
    },
    "highCpuThreshold": {
     "default": "High CPU Percentage Threshold"
    },
    "imageName": {
     "default": "F5 Image Name"
    },
    "instanceType": {
     "default": "AWS Instance Size"
    },
    "lowCpuThreshold": {
     "default": "Low CPU Percentage Threshold"
    },
    "managementGuiPort": {
     "default": "Management Port"
    },
    "notificationEmail": {
     "default": "Notification Email"
    },
    "ntpServer": {
     "default": "NTP Server"
    },
    "owner": {
     "default": "Owner"
    },
    "policyLevel": {
     "default": "Web Application Firewall Policy Level"
    },
    "provisionPublicIP": {
     "default": "Provision Public IP addresses for the BIG-IP interfaces"
    },
    "restrictedSrcAddress": {
     "default": "Restricted Source Address to BIG-IP"
    },
    "restrictedSrcAddressApp": {
     "default": "Restricted Source Address to Application"
    },
    "scaleDownBytesThreshold": {
     "default": "Scale Down Bytes Threshold"
    },
    "scaleUpBytesThreshold": {
     "default": "Scale Up Bytes Threshold"
    },
    "scalingMaxSize": {
     "default": "Maximum Instances"
    },
    "scalingMinSize": {
     "default": "Minimum Instances"
    },
    "sshKey": {
     "default": "SSH Key Name"
    },
    "subnets": {
     "default": "Subnet ID(s)"
    },
    "throughput": {
     "default": "Maximum Throughput"
    },
    "timezone": {
     "default": "Timezone (Olson)"
    },
    "virtualServicePort": {
     "default": "Virtual Service Port"
    }
   }
  },
  "Version": "5.7.1"
 },
 "Outputs": {
  "bigipAutoscaleGroup": {
   "Description": "BIG-IP Autoscale Group",
   "Value": {
    "Ref": "BigipAutoscaleGroup"
   }
  },
  "bigipExternalSecurityGroup": {
   "Description": "BIG-IP Security Group (External or Public)",
   "Value": {
    "Ref": "bigipExternalSecurityGroup"
   }
  },
  "s3Bucket": {
   "Description": "BIG-IP S3 Bucket",
   "Value": {
    "Ref": "S3Bucket"
   }
  }
 },
 "Parameters": {
  "Vpc": {
   "ConstraintDescription": "This must be an existing VPC within the working region.",
   "Type": "AWS::EC2::VPC::Id"
  },
  "adminUsername": {
   "AllowedPattern": "[a-zA-Z0-9._-]+",
   "ConstraintDescription": "Verify your BIG-IP admin username. Note that the user name can contain only alphanumeric characters, periods ( . ), underscores ( _ ), or hyphens ( - ). The user name cannot be any of the following: adm, apache, bin, daemon, guest, lp, mail, manager, mysql, named, nobody, ntp, operator, partition, password, pcap, postfix, radvd, root, rpc, rpm, sshd, syscheck, tomcat, uucp, or vcsa.",
   "Default": "cluster-admin",
   "Description": "BIG-IP Admin User for clustering",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "allowPhoneHome": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "This deployment can send anonymous device statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
   "Type": "String"
  },
  "allowUsageAnalytics": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "This deployment can send anonymous template statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
   "Type": "String"
  },
  "appCertificateS3Arn": {
   "ConstraintDescription": "Verify S3 ARN of pfx ssl certificate used for application",
   "Default": "default",
   "Description": "S3 ARN of pfx ssl certificate used for application - ex. arn:aws:s3:::my_corporate_bucket/website.pfx for public regions. For GovCloud (US) region, start with arn:aws-us-gov:s3. For China region, start with arn:aws-cn:s3.",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "appInternalDnsName": {
   "Default": "www.example.com",
   "Description": "DNS name poolapp.example.com for the application pool.  This is not required if you are using the Service Discovery feature.",
   "Type": "String"
  },
  "application": {
   "Default": "f5app",
   "Description": "Name of the Application Tag",
   "Type": "String"
  },
  "applicationPoolTagKey": {
   "Default": "default",
   "Description": "This is used for the Service Discovery feature. If you specify a non-default value here, the template automatically discovers the pool members you have tagged with this key and the value you specify next.",
   "Type": "String"
  },
  "applicationPoolTagValue": {
   "Default": "default",
   "Description": "This is used for the Service Discovery feature. If you specify a non-default value here, the template automatically discovers the pool members you have tagged with the key you specified and this value.",
   "Type": "String"
  },
  "applicationPort": {
   "ConstraintDescription": "Must be a valid port number (1-65535).",
   "Default": 80,
   "Description": "Port for the application pool member on BIG-IP VE",
   "MaxValue": 65535,
   "MinValue": 1,
   "Type": "Number"
  },
  "availabilityZones": {
   "Description": "Availability Zones where you want to deploy BIG-IP VEs (we recommend at least 2)",
   "Type": "List<AWS::EC2::AvailabilityZone::Name>"
  },
  "bigIpModules": {
   "Default": "ltm:nominal,asm:nominal",
   "Description": "Comma separated list of modules and levels to provision, for example: ltm:nominal,asm:nominal",
   "Type": "String"
  },
  "bigipNetworkLoadBalancerTargetGroupsArns": {
   "Default": "none",
   "Description": "ARN of target group(s) for AWS Network Load Balancer for the BIG-IP VEs",
   "Type": "String"
  },
  "costcenter": {
   "Default": "f5costcenter",
   "Description": "Name of the Cost Center Tag",
   "Type": "String"
  },
  "customImageId": {
   "ConstraintDescription": "Must be a valid AMI Id",
   "Default": "OPTIONAL",
   "Description": "If you would like to deploy using a custom BIG-IP image, provide the AMI Id.  **Note**: Unless specifically required, leave the default of **OPTIONAL**",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "declarationUrl": {
   "AllowedPattern": "^(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$|^none$|^default$",
   "Default": "default",
   "Description": "URL for the AS3 declaration JSON file to be deployed. If left at **default**, the recommended F5 application service configuration will be applied. Enter **none** to deploy without a service configuration.",
   "Type": "String"
  },
  "deploymentName": {
   "Default": "example",
   "Description": "Name the template uses to create object names",
   "MaxLength": 25,
   "Type": "String"
  },
  "environment": {
   "Default": "f5env",
   "Description": "Name of the Environment Tag",
   "Type": "String"
  },
  "group": {
   "Default": "f5group",
   "Description": "Name of the Group Tag",
   "Type": "String"
  },
  "highCpuThreshold": {
   "ConstraintDescription": "Select a value between 0 to 100",
   "Default": 80,
   "Description": "High CPU Percentage threshold to begin scaling up BIG-IP VE instances",
   "MaxValue": 100,
   "MinValue": 0,
   "Type": "Number"
  },
  "imageName": {
   "AllowedValues": [
    "Best",
    "AdvancedWaf",
    "PerAppVeAwaf"
   ],
   "ConstraintDescription": "Must be a valid F5 BIG-IP VE image type",
   "Default": "Best",
   "Description": "F5 BIG-IP Performance Type",
   "Type": "String"
  },
  "instanceType": {
   "AllowedValues": [
    "m3.2xlarge",
    "m4.xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.10xlarge",
    "m5.large",
    "m5.xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "c3.4xlarge",
    "c3.8xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c5.large",
    "c5.xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "cc2.8xlarge",
    "c5n.2xlarge",
    "c5n.4xlarge"
   ],
   "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
   "Default": "m3.2xlarge",
   "Description": "AWS instance type",
   "Type": "String"
  },
  "lowCpuThreshold": {
   "ConstraintDescription": "Select a value between 0 to 100",
   "Default": 0,
   "Description": "Low CPU Percentage threshold to begin scaling down BIG-IP VE instances",
   "MaxValue": 100,
   "MinValue": 0,
   "Type": "Number"
  },
  "managementGuiPort": {
   "ConstraintDescription": "Must be a valid, unused port on the BIG-IP.",
   "Default": "8443",
   "Description": "Port for the BIG-IP management Configuration utility",
   "Type": "Number"
  },
  "notificationEmail": {
   "AllowedPattern": ".+@.+",
   "ConstraintDescription": "Must be a valid email address.",
   "Description": "Valid email address to send Auto Scaling event notifications",
   "Type": "String"
  },
  "ntpServer": {
   "Default": "0.pool.ntp.org",
   "Description": "NTP server for this implementation",
   "Type": "String"
  },
  "owner": {
   "Default": "f5owner",
   "Description": "Name of the Owner Tag",
   "Type": "String"
  },
  "policyLevel": {
   "AllowedValues": [
    "low",
    "medium",
    "high"
   ],
   "ConstraintDescription": "Select the WAF Policy Level you want to use",
   "Default": "high",
   "Description": "WAF Policy Level you want to use to protect the applications",
   "Type": "String"
  },
  "provisionPublicIP": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "Whether or not to provision Public IP Addresses for the BIG-IP Network Interfaces. By Default no Public IP addresses are provisioned.",
   "Type": "String"
  },
  "restrictedSrcAddress": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "restrictedSrcAddressApp": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range that can be used to access web traffic (80/443) to the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "scaleDownBytesThreshold": {
   "Default": 10000,
   "Description": "Incoming bytes threshold to begin scaling down BIG-IP VE instances",
   "Type": "Number"
  },
  "scaleUpBytesThreshold": {
   "Default": 35000,
   "Description": "Incoming bytes threshold to begin scaling up BIG-IP VE instances",
   "Type": "Number"
  },
  "scalingMaxSize": {
   "ConstraintDescription": "Must be a number between 2-8",
   "Default": 3,
   "Description": "Maximum number of BIG-IP instances (2-8) that can be created in the Auto Scale Group",
   "MaxValue": 8,
   "MinValue": 2,
   "Type": "Number"
  },
  "scalingMinSize": {
   "ConstraintDescription": "Must be a number between 1-8",
   "Default": 1,
   "Description": "Minimum number of BIG-IP instances (1-8) you want available in the Auto Scale Group",
   "MaxValue": 8,
   "MinValue": 1,
   "Type": "Number"
  },
  "sshKey": {
   "Description": "EC2 KeyPair to enable SSH access to the BIG-IP instance",
   "Type": "AWS::EC2::KeyPair::KeyName"
  },
  "subnets": {
   "ConstraintDescription": "The subnet IDs must be within an existing VPC",
   "Description": "Public or external subnets for the availability zones",
   "Type": "List<AWS::EC2::Subnet::Id>"
  },
  "throughput": {
   "AllowedValues": [
    "25Mbps",
    "200Mbps",
    "1000Mbps",
    "5000Mbps"
   ],
   "ConstraintDescription": "Select the BIG-IP throughput you want to use",
   "Default": "1000Mbps",
   "Description": "Maximum amount of throughput for BIG-IP VE",
   "Type": "String"
  },
  "timezone": {
   "Default": "UTC",
   "Description": "Enter the Olson timezone string from /usr/share/zoneinfo. The default is 'UTC'. See the TZ column here (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for legal values. For example, 'US/Eastern'.",
   "Type": "String"
  },
  "virtualServicePort": {
   "ConstraintDescription": "Must be a valid port number (1-65535) except port 80.",
   "Default": 443,
   "Description": "Port for the virtual service on BIG-IP VE. Must be a valid port number (1-65535) except port 80.",
   "MaxValue": 65535,
   "MinValue": 1,
   "Type": "Number"
  }
 },
 "Resources": {
  "BigipAutoScalingAccessRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "ec2.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "Fn::If": [
       "useDefaultCert",
       {
        "PolicyDocument": {
         "Statement": [
          {
           "Action": [
            "s3:ListBucket"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:*:s3:::",
              {
               "Ref": "S3Bucket"
              }
             ]
            ]
           }
          },
          {
           "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:DeleteObject"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:*:s3:::",
              {
               "Ref": "S3Bucket"
              },
              "/*"
             ]
            ]
           }
          },
          {
           "Action": [
            "sqs:SendMessage",
            "sqs:ReceiveMessage",
            "sqs:DeleteMessage"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::GetAtt": [
             "SQSQueue",
             "Arn"
            ]
           }
          },
          {
           "Action": [
            "autoscaling:DescribeAutoScalingGroups",
            "autoscaling:DescribeAutoScalingInstances",
            "autoscaling:SetInstanceProtection",
            "ec2:DescribeInstances",
            "ec2:DescribeInstanceStatus",
            "ec2:DescribeAddresses",
            "ec2:AssociateAddress",
            "ec2:DisassociateAddress",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeNetworkInterfaceAttribute",
            "ec2:DescribeRouteTables",
            "ec2:ReplaceRoute",
            "ec2:assignprivateipaddresses",
            "ec2:DescribeTags",
            "ec2:CreateTags",
            "ec2:DeleteTags",
            "sts:AssumeRole",
            "cloudwatch:PutMetricData",
            "cloudformation:ListStackResources",
            "cloudformation:SignalResource"
           ],
           "Effect": "Allow",
           "Resource": [
            "*"
           ]
          }
         ],
         "Version": "2012-10-17"
        },
        "PolicyName": "BigipAutoScalingAcccessPolicy"
       },
       {
        "PolicyDocument": {
         "Statement": [
          {
           "Action": [
            "s3:ListBucket"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:*:s3:::",
              {
               "Ref": "S3Bucket"
              }
             ]
            ]
           }
          },
          {
           "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:DeleteObject"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:*:s3:::",
              {
               "Ref": "S3Bucket"
              },
              "/*"
             ]
            ]
           }
          },
          {
           "Action": [
            "sqs:SendMessage",
            "sqs:ReceiveMessage",
            "sqs:DeleteMessage"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::GetAtt": [
             "SQSQueue",
             "Arn"
            ]
           }
          },
          {
           "Action": [
            "autoscaling:DescribeAutoScalingGroups",
            "autoscaling:DescribeAutoScalingInstances",
            "autoscaling:SetInstanceProtection",
            "ec2:DescribeInstances",
            "ec2:DescribeInstanceStatus",
            "ec2:DescribeAddresses",
            "ec2:AssociateAddress",
            "ec2:DisassociateAddress",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeNetworkInterfaceAttribute",
            "ec2:DescribeRouteTables",
            "ec2:ReplaceRoute",
            "ec2:assignprivateipaddresses",
            "ec2:DescribeTags",
            "ec2:CreateTags",
            "ec2:DeleteTags",
            "sts:AssumeRole",
            "cloudwatch:PutMetricData",
            "cloudformation:ListStackResources",
            "cloudformation:SignalResource"
           ],
           "Effect": "Allow",
           "Resource": [
            "*"
           ]
          },
          {
           "Action": [
            "s3:GetObject"
           ],
           "Effect": "Allow",
           "Resource": {
            "Ref": "appCertificateS3Arn"
           }
          }
         ],
         "Version": "2012-10-17"
        },
        "PolicyName": "BigipAutoScalingAcccessPolicy"
       }
      ]
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "BigipAutoScalingInstanceProfile": {
   "Properties": {
    "Path": "/",
    "Roles": [
     {
      "Ref": "BigipAutoScalingAccessRole"
     }
    ]
   },
   "Type": "AWS::IAM::InstanceProfile"
  },
  "BigipAutoscaleGroup": {
   "CreationPolicy": {
    "ResourceSignal": {
     "Count": {
      "Ref": "scalingMinSize"
     },
     "Timeout": "PT30M"
    }
   },
   "Properties": {
    "Cooldown": 1500,
    "DesiredCapacity": {
     "Ref": "scalingMinSize"
    },
    "HealthCheckGracePeriod": 1500,
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {
     "Ref": "BigipLaunchConfig"
    },
    "MaxSize": {
     "Ref": "scalingMaxSize"
    },
    "MetricsCollection": [
     {
      "Granularity": "1Minute"
     }
    ],
    "MinSize": {
     "Ref": "scalingMinSize"
    },
    "NotificationConfigurations": [
     {
      "NotificationTypes": [
       "autoscaling:EC2_INSTANCE_LAUNCH",
       "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
       "autoscaling:EC2_INSTANCE_TERMINATE",
       "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
      ],
      "TopicARN": {
       "Ref": "SNSTopic"
      }
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": "true",
      "Value": {
       "Fn::Join": [
        "",
        [
         "BIG-IP Autoscale Instance: ",
         {
          "Ref": "deploymentName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "TargetGroupARNs": [
     {
      "Fn::If": [
       "noTargetGroup",
       {
        "Ref": "AWS::NoValue"
       },
       {
        "Ref": "bigipNetworkLoadBalancerTargetGroupsArns"
       }
      ]
     }
    ],
    "VPCZoneIdentifier": {
     "Ref": "subnets"
    }
   },
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "UpdatePolicy": {
    "AutoScalingRollingUpdate": {
     "MaxBatchSize": "1",
     "MinInstancesInService": "1",
     "PauseTime": "PT30M"
    }
   }
  },
  "BigipHighCpuAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleUpPolicy"
     }
    ],
    "AlarmDescription": "CPU usage percentage exceeds average threshold after 1 successive interval of 1 minute",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": "1",
    "MetricName": "tmm-stat",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "60",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "highCpuThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipHighbytesAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleUpPolicy"
     }
    ],
    "AlarmDescription": "Throughput exceeds average threshold after 1 successive interval of 1 minute",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": "1",
    "MetricName": "throughput-per-sec",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "60",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "scaleUpBytesThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipLaunchConfig": {
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "config": {
      "commands": {
       "000-disable-1nicautoconfig": {
        "command": "/usr/bin/setdb provision.1nicautoconfig disable"
       },
       "001-rest-provision-extramb": {
        "command": "/usr/bin/setdb provision.extramb 500"
       },
       "002-rest-use-extramb": {
        "command": "/usr/bin/setdb restjavad.useextramb true"
       },
       "003-rest-restart": {
        "command": "bigstart restart restjavad restnoded"
       },
       "010-install-libs": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "mkdir -p /var/log/cloud/aws;",
           "nohup /config/installCloudLibs.sh",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       },
       "015-network-config": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws/1nicSetup.sh",
           "--cwd /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws",
           "--log-level silly",
           "-o /var/log/cloud/aws/1nicSetup.log",
           "--signal NETWORK_CONFIG_DONE",
           "&>> /var/log/cloud/aws/install.log < /dev/null",
           "&"
          ]
         ]
        }
       },
       "017-set-master-key": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --signal MASTER_KEY_CONFIGURED",
           " --wait-for NETWORK_CONFIG_DONE",
           " --file f5-rest-node",
           " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/setMasterKey --log-level silly --cloud aws --provider-options s3Bucket:",
           {
            "Ref": "S3Bucket"
           },
           ",mgmtPort:",
           {
            "Ref": "managementGuiPort"
           },
           "' --log-level silly",
           " -o /var/log/cloud/aws/setMasterKey.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "020-generate-password": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --signal PASSWORD_CREATED",
           " --wait-for MASTER_KEY_CONFIGURED",
           " --file f5-rest-node",
           " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
           " --log-level silly",
           " -o /var/log/cloud/aws/generatePassword.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "030-create-admin-user": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --wait-for PASSWORD_CREATED",
           " --signal ADMIN_CREATED",
           " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
           " --cl-args '--user ",
           {
            "Ref": "adminUsername"
           },
           " --password-file /config/cloud/aws/.adminPassword",
           " --password-encrypted",
           "'",
           " --log-level silly",
           " -o /var/log/cloud/aws/createUser.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "050-onboard-BIG-IP": {
        "command": {
         "Fn::If": [
          "optin",
          {
           "Fn::Join": [
            " ",
            [
             "DEPLOYMENTID=`echo \"",
             {
              "Ref": "AWS::StackId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "CUSTOMERID=`echo \"",
             {
              "Ref": "AWS::AccountId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth0`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--log-level silly",
             "--wait-for ADMIN_CREATED",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.20.0-3.noarch.rpm",
             "--host localhost",
             "--user",
             {
              "Ref": "adminUsername"
             },
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--port 8443",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "--metrics \"cloudName:aws,region:${REGION},bigipVersion:15.1.0.4-0.0.6,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-payg-autoscale-bigip-waf-nlb.template,templateVersion:5.7.1,licenseType:hourly\"",
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null",
             "&"
            ]
           ]
          },
          {
           "Fn::Join": [
            " ",
            [
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth0`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--log-level silly",
             "--wait-for ADMIN_CREATED",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.20.0-3.noarch.rpm",
             "--host localhost",
             "--port 8443",
             "--user",
             {
              "Ref": "adminUsername"
             },
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null",
             "&"
            ]
           ]
          }
         ]
        }
       },
       "060-custom-config": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--log-level silly",
           "--file /config/cloud/aws/custom-config.sh",
           "--cwd /config/cloud/aws",
           "-o /var/log/cloud/aws/custom-config.log",
           "--wait-for ONBOARD_DONE",
           "--signal CUSTOM_CONFIG_DONE",
           "&>> /var/log/cloud/aws/install.log < /dev/null",
           "&"
          ]
         ]
        }
       },
       "070-verify-deployment": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --wait-for CUSTOM_CONFIG_DONE",
           " --signal DEPLOYMENT_VERIFIED",
           " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs-aws/scripts/verifyDeploymentCompletion.js",
           " --cl-args '--user ",
           {
            "Ref": "adminUsername"
           },
           " --password-url file:///config/cloud/aws/.adminPassword",
           " --password-encrypted true",
           " --host localhost",
           " --port ",
           {
            "Ref": "managementGuiPort"
           },
           " --solution autoscale",
           " --log-level silly",
           " --instances-count ",
           {
            "Ref": "scalingMinSize"
           },
           "'",
           " --log-level silly",
           " -o /var/log/cloud/aws/verifyDeploymentCompletion.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       }
      },
      "files": {
       "/config/cloud/asm-policy-linux.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/solution-scripts/asm-policy-linux.tar.gz"
       },
       "/config/cloud/aws/custom-config.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "# Generated from 5.7.1\n",
           "date\n",
           ". /config/cloud/aws/onboard_config_vars\n",
           "if [[ $allowPhoneHome == \"No\" ]]; then\n",
           "    tmsh modify sys software update auto-phonehome disabled\n",
           "fi\n",
           "tmsh create sys icall script uploadMetrics definition { exec /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs-aws/scripts/reportMetrics.sh }\n",
           "tmsh create sys icall handler periodic /Common/metricUploadHandler { first-occurrence now interval 60 script /Common/uploadMetrics }\n",
           "tmsh save /sys config\n",
           "echo 'Attempting to Join or Initiate Autoscale Cluster' \n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js --cloud aws --provider-options s3Bucket:${s3Bucket},sqsUrl:${sqsUrl},mgmtPort:${managementGuiPort} --host localhost --port ${managementGuiPort} --user ${adminUsername} --password-url file:///config/cloud/aws/.adminPassword --password-encrypted --device-group autoscale-group --block-sync -c join --log-level silly --output /var/log/cloud/aws/autoscale.log \n",
           "if [ -f /config/cloud/master ]; then \n",
           "  if `jq '.ucsLoaded' < /config/cloud/master`; then \n",
           "    echo \"UCS backup loaded from backup folder in S3 bucket ${s3Bucket}.\"\n",
           "  else\n",
           "    echo 'SELF-SELECTED as Master ... Initiated Autoscale Cluster ... Loading default config'\n",
           "    tmsh modify cm device-group autoscale-group asm-sync enabled\n",
           "    source /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForBigip.sh;wait-for-bigip\n",
           "    ### START CUSTOM CONFIGURATION\n",
           "    deployed=\"no\"\n",
           "    url_regex=\"(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n",
           "    file_loc=\"/config/cloud/custom_config\"\n",
           "    if [[ $declarationUrl =~ $url_regex ]]; then\n",
           "       response_code=$(/usr/bin/curl -sk -w \"%{http_code}\" $declarationUrl -o $file_loc)\n",
           "       if [[ $response_code == 200 ]]; then\n",
           "           echo \"Custom config download complete; checking for valid JSON.\"\n",
           "           cat $file_loc | jq .class\n",
           "           if [[ $? == 0 ]]; then\n",
           "               response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w \"%{http_code}\" -X POST -H \"Content-Type: application/json\" -H \"Expect:\" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d @$file_loc -o /dev/null)\n",
           "           if [[ $response_code == 200 || $response_code == 502 ]]; then\n",
           "               echo \"Deployment of custom application succeeded.\"\n",
           "               deployed=\"yes\"\n",
           "           else\n",
           "               echo \"Failed to deploy custom application; continuing...\"\n",
           "           fi\n",
           "       else\n",
           "           echo \"Custom config was not valid JSON, continuing...\"\n",
           "       fi\n",
           "       else\n",
           "           echo \"Failed to download custom config; continuing...\"\n",
           "       fi\n",
           "   else\n",
           "      echo \"Custom config was not a URL, continuing...\"\n",
           "   fi\n",
           "   if [[ $deployed == \"no\" && $declarationUrl == \"default\" ]]; then\n",
           "        asm_policy=\"/config/cloud/asm-policy-linux-${policyLevel}.xml\"\n",
           "        payload=$(echo $payload | jq -c --arg asm_policy $asm_policy --arg pool_http_port $applicationPort --arg vs_http_port $virtualServicePort '.waf.Shared.policyWAF.file = $asm_policy | .waf.http.pool.members[0].servicePort = ($pool_http_port | tonumber) | .waf.http.serviceMain.virtualPort = ($vs_http_port | tonumber)')\n",
           "       if [[ \"${appCertificateS3Arn}\" != \"default\" ]]; then\n",
           "           f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs-aws/scripts/getCertFromS3.js ${appCertificateS3Arn}\n",
           "           tmsh install sys crypto pkcs12 site.example.com from-local-file /config/ssl/ssl.key/${appCertificateS3Arn##*/}\n",
           "           tmsh create ltm profile client-ssl example-clientssl-profile cert site.example.com.crt key site.example.com.key\n",
           "       else\n",
           "           tmsh create ltm profile client-ssl example-clientssl-profile cert default.crt key default.key\n",
           "       fi\n",
           "        if [ \"${applicationPoolTagKey}\" != \"default\" ]\n",
           "        then\n",
           "            payload=$(echo $payload | jq -c 'del(.waf.http.pool.members[0].autoPopulate) | del(.waf.http.pool.members[0].hostname)')\n",
           "            payload=$(echo $payload | jq -c --arg tagKey $applicationPoolTagKey --arg tagValue $applicationPoolTagValue --arg region $region '.waf.http.pool.members[0].tagKey = $tagKey | .waf.http.pool.members[0].tagValue = $tagValue | .waf.http.pool.members[0].region = $region')\n",
           "        else\n",
           "            payload=$(echo $payload | jq -c 'del(.waf.http.pool.members[0].updateInterval) | del(.waf.http.pool.members[0].tagKey) | del(.waf.http.pool.members[0].tagValue) | del(.waf.http.pool.members[0].addressRealm) | del(.waf.http.pool.members[0].region)')\n",
           "            payload=$(echo $payload | jq -c --arg pool_member $appInternalDnsName '.waf.http.pool.members[0].hostname = $pool_member | .waf.http.pool.members[0].addressDiscovery = \"fqdn\"')\n",
           "        fi\n",
           "        response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w \"%{http_code}\" -X POST -H \"Content-Type: application/json\" -H \"Expect:\" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d \"$payload\" -o /dev/null)\n",
           "        if [[ $response_code == 200 || $response_code == 502  ]]; then\n",
           "            echo 'Deployment of recommended application succeeded.'\n",
           "        else\n",
           "            echo 'Failed to deploy recommended application'\n",
           "            exit 1\n",
           "        fi\n",
           "    fi\n",
           "    ### END CUSTOM CONFIGURATION\n",
           "    tmsh save /sys config\n",
           "    f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js --cloud aws --provider-options s3Bucket:${s3Bucket},sqsUrl:${sqsUrl},mgmtPort:${managementGuiPort}",
           "      --host localhost --port ${managementGuiPort} --user ${adminUsername} --password-url file:///config/cloud/aws/.adminPassword --password-encrypted -c unblock-sync --log-level silly --output /var/log/cloud/aws/autoscale.log \n",
           "  fi\n",
           "fi\n",
           "(crontab -l 2>/dev/null; echo '*/1 * * * * /config/cloud/aws/run_autoscale_update.sh') | crontab -\n",
           "(crontab -l 2>/dev/null; echo '59 23 * * * /config/cloud/aws/run_autoscale_backup.sh') | crontab -\n",
           "tmsh save /sys config\n",
           "date\n",
           "echo 'custom-config.sh complete'\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/getNameServer.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "INTERFACE=$1",
           "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep ether | awk '{print tolower($2)}'`",
           "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
           "VPC_NET=${VPC_CIDR_BLOCK%/*}",
           "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
           "echo $NAME_SERVER"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/onboard_config_vars": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "# Generated from 5.7.1\n",
           "hostname=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
           "region='",
           {
            "Ref": "AWS::Region"
           },
           "'\n",
           "deploymentName='",
           {
            "Ref": "deploymentName"
           },
           "'\n",
           "adminUsername='",
           {
            "Ref": "adminUsername"
           },
           "'\n",
           "managementGuiPort='",
           {
            "Ref": "managementGuiPort"
           },
           "'\n",
           "timezone='",
           {
            "Ref": "timezone"
           },
           "'\n",
           "ntpServer='",
           {
            "Ref": "ntpServer"
           },
           "'\n",
           "virtualServicePort='",
           {
            "Ref": "virtualServicePort"
           },
           "'\n",
           "applicationPort='",
           {
            "Ref": "applicationPort"
           },
           "'\n",
           "appInternalDnsName='",
           {
            "Ref": "appInternalDnsName"
           },
           "'\n",
           "applicationPoolTagKey='",
           {
            "Ref": "applicationPoolTagKey"
           },
           "'\n",
           "applicationPoolTagValue='",
           {
            "Ref": "applicationPoolTagValue"
           },
           "'\n",
           "s3Bucket='",
           {
            "Ref": "S3Bucket"
           },
           "'\n",
           "sqsUrl='",
           {
            "Ref": "SQSQueue"
           },
           "'\n",
           "declarationUrl='",
           {
            "Ref": "declarationUrl"
           },
           "'\n",
           "allowPhoneHome='",
           {
            "Ref": "allowPhoneHome"
           },
           "'\n",
           "policyLevel='",
           {
            "Ref": "policyLevel"
           },
           "'\n",
           "passwd=$(f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/decryptDataFromFile.js --data-file /config/cloud/aws/.adminPassword)\n",
           "payload='{\"class\":\"ADC\",\"schemaVersion\":\"3.0.0\",\"label\":\"autoscale_waf\",\"id\":\"AUTOSCALE_WAF\",\"remark\":\"Autoscale WAF\",\"waf\":{\"class\":\"Tenant\",\"Shared\":{\"class\":\"Application\",\"template\":\"shared\",\"serviceAddress\":{\"class\":\"Service_Address\",\"virtualAddress\":\"0.0.0.0\"},\"policyWAF\":{\"class\":\"WAF_Policy\",\"file\":\"/tmp/as30-linux-medium.xml\"}},\"http\":{\"class\":\"Application\",\"template\":\"https\",\"serviceMain\":{\"class\":\"Service_HTTPS\",\"virtualAddresses\":[{\"use\":\"/waf/Shared/serviceAddress\"}],\"serverTLS\":{\"bigip\":\"/Common/example-clientssl-profile\"},\"snat\":\"auto\",\"securityLogProfiles\":[{\"bigip\":\"/Common/Log illegal requests\"}],\"pool\":\"pool\",\"policyWAF\":{\"use\":\"/waf/Shared/policyWAF\"}},\"pool\":{\"class\":\"Pool\",\"monitors\":[\"http\"],\"members\":[{\"autoPopulate\":true,\"hostname\":\"demo.example.com\",\"servicePort\":80,\"addressDiscovery\":\"aws\",\"updateInterval\":15,\"tagKey\":\"applicationPoolTagKey\",\"tagValue\":\"applicationPoolTagValue\",\"addressRealm\":\"private\",\"region\":\"us-west-2\"}]}}}}'\n",
           "appCertificateS3Arn='",
           {
            "Ref": "appCertificateS3Arn"
           },
           "'\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/run_autoscale_backup.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "source /config/cloud/aws/onboard_config_vars\n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js",
           " --cloud aws --provider-options '",
           "s3Bucket:",
           {
            "Ref": "S3Bucket"
           },
           ",sqsUrl:",
           {
            "Ref": "SQSQueue"
           },
           ",mgmtPort:",
           {
            "Ref": "managementGuiPort"
           },
           "'",
           " --host localhost",
           " --port ",
           {
            "Ref": "managementGuiPort"
           },
           " --user ",
           {
            "Ref": "adminUsername"
           },
           " --password-url file:///config/cloud/aws/.adminPassword",
           " --password-encrypted",
           " --device-group autoscale-group",
           " --cluster-action backup-ucs",
           " --log-level silly --output /var/log/cloud/aws/autoscale.log"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/run_autoscale_update.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js",
           " --cloud aws --provider-options '",
           "s3Bucket:",
           {
            "Ref": "S3Bucket"
           },
           ",sqsUrl:",
           {
            "Ref": "SQSQueue"
           },
           ",mgmtPort:",
           {
            "Ref": "managementGuiPort"
           },
           "'",
           " --host localhost",
           " --port ",
           {
            "Ref": "managementGuiPort"
           },
           " --user ",
           {
            "Ref": "adminUsername"
           },
           " --password-url file:///config/cloud/aws/.adminPassword",
           " --password-encrypted",
           " --device-group autoscale-group",
           " --cluster-action update",
           " --log-level silly --output /var/log/cloud/aws/autoscale.log "
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/f5-appsvcs-3.20.0-3.noarch.rpm": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-appsvcs-extension/v3.20.0/f5-appsvcs-3.20.0-3.noarch.rpm"
       },
       "/config/cloud/f5-cloud-libs-aws.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs-aws/v2.9.0/f5-cloud-libs-aws.tar.gz"
       },
       "/config/cloud/f5-cloud-libs.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs/v4.22.0/f5-cloud-libs.tar.gz"
       },
       "/config/installCloudLibs.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "echo about to execute",
           "checks=0",
           "while [ $checks -lt 120 ]; do echo checking mcpd",
           "    tmsh -a show sys mcp-state field-fmt | grep -q running",
           "    if [ $? == 0 ]; then",
           "        echo mcpd ready",
           "        break",
           "    fi",
           "    echo mcpd not ready yet",
           "    let checks=checks+1",
           "    sleep 10",
           "done",
           "echo loading verifyHash script",
           "if ! tmsh load sys config merge file /config/verifyHash; then",
           "    echo cannot validate signature of /config/verifyHash",
           "    exit",
           "fi",
           "echo loaded verifyHash",
           "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/f5-appsvcs-3.20.0-3.noarch.rpm\")",
           "for fileToVerify in \"${filesToVerify[@]}\"",
           "do",
           "    echo verifying \"$fileToVerify\"",
           "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
           "        echo \"$fileToVerify\" is not valid",
           "        exit 1",
           "    fi",
           "    echo verified \"$fileToVerify\"",
           "done",
           "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
           "echo expanding f5-cloud-libs.tar.gz",
           "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "echo installing dependencies",
           "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "tar xvfz /config/cloud/asm-policy-linux.tar.gz -C /config/cloud",
           "echo cloud libs install complete",
           "touch /config/cloud/cloudLibsReady"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/verifyHash": {
        "content": {
         "Fn::Join": [
          "",
          [
           "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) e688cb153416abc85da081dd09d2dd4fd433c29f197fd927c12afa9e0d44699280b48a2ae93f19361dd0c3cdb72823205ed037ef0a10f7cfbef09f399aa620c8\n            set hashes(f5-cloud-libs-aws.tar.gz) fefa76ffe9e2c36d3b36b12f7c5a51f1fb8265221d000afafd113af07cbda30717bda03b26c9e10c636344a735e7ee59d8de172c6b970bcc24e161cdf01d354f\n            set hashes(f5-cloud-libs-azure.tar.gz) fa0d27d2cd69f965dcdc0dd79bb85baad47686af19a2013db2ee7fb486a0ccbd1072c3a34ef4553c28fe7387665e36557134cf6d4e221f2392f0b11eaf9bcbaf\n            set hashes(f5-cloud-libs-gce.tar.gz) e8f935a70aff0dbd19b8967c4ea35ca8027ff5657d929923aca971394370a269f4cbb960dd506abd34a36d82de0b3442e2f63c079c53cf1f0f023da110309cb6\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(f5-cloud-libs-consul.tar.gz) a32aab397073df92cbbba5067e5823e9b5fafca862a258b60b6b40aa0975c3989d1e110f706177b2ffbe4dde65305a260a5856594ce7ad4ef0c47b694ae4a513\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(f5.aws_advanced_ha.v1.4.0rc4.tmpl) 2418ac8b1f1884c5c096cbac6a94d4059aaaf05927a6a4508fd1f25b8cc6077498839fbdda8176d2cf2d274a27e6a1dae2a1e3a0a9991bc65fc74fc0d02ce963\n            set hashes(f5.aws_advanced_ha.v1.4.0rc5.tmpl) 5e582187ae1a6323e095d41eddd41151d6bd38eb83c634410d4527a3d0e246a8fc62685ab0849de2ade62b0275f51264d2deaccbc16b773417f847a4a1ea9bc4\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 4811a95372d1dbdbb4f62f8bcc48d4bc919fa492cda012c81e3a2fe63d7966cc36ba8677ed049a814a930473234f300d3f8bced2b0db63176d52ac99640ce81b\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20\n            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8\n            set hashes(f5-appsvcs-3.18.0-4.noarch.rpm) e72ee8005a27070ac399ab097e8aa507a72aae4721d7491589cfeb821db3ef86cbc979e796ab319ec727bb51400ccda813c4b9eb4a6b3d1220a396b582f8f400\n            set hashes(f5-appsvcs-3.20.0-3.noarch.rpm) d4bba8892a2068bb53f88c6090dc65f17707abca35a7ed2fff39980057fe7f7a2ebf710ab2284a1d83d70b7746beabad9df603017c0fd8728f7457661c95ac8d\n            set hashes(f5-cloud-failover-1.1.0-0.noarch.rpm) 15a440c299f9e4af86a3d0f5b0d75b0054385b95e47c3ef116d2e0bfb0041a26dcbf549028e2a26d2c718ec61446bd657be38fbbcd9db781efe5414c174ac68c\n            set hashes(f5-cloud-failover-1.3.0-0.noarch.rpm) 19681eb33d9f910c913f8180199485eb653b4b5ebeaae0b90a6ce8341d7a22fed8d21815b5ba148c468852d20cc26fad4c4242e50ecc184f1f8770dacced6f6a\n            set hashes(f5-cloud-failover-1.4.0-0.noarch.rpm) 49e9108a070e0c8713aeb7b330662358542e61b7c53a9d45108d37a9bf5246f9e4aaae10cc61064801dcccd20bfd5108347b0f694510e7ece07f96c45ba683b0\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature BrPhvwDOJwEvfJsM25Xnkf9/VmDMar4n91RG8Zp7Oc5DzYCYdYlAXVxV2goRPUq5J/1nfTwFCL+9SuZk8jiafGbXOj03xsFxRrShuIGxvu4tpVxIJbTCawPnybr6b16ShQVSckaigdstiYfh0kaGwM6qNeww+Dlu54va1ZkVNrZgEQULy2lyuCZ86qOOFxgpHPCVSrL0DKu1R1EgjoQwwHHohv9uANmSwNRShVb9AwrxItck5qnnR28zWirPXpvR4PXU4NUgw2gqhYeuGUi1TWG+tIBSMNVgqKu+rsjEPTxnllYsy2HGl2aSJHHXVpx7VpfaFmb8xPCbt2VTBjTWbA==\n    signing-key /Common/f5-irule\n}\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/waitThenRun.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "while true; do echo \"waiting for cloud libs install to complete\"",
           "    if [ -f /config/cloud/cloudLibsReady ]; then",
           "        break",
           "    else",
           "        sleep 10",
           "    fi",
           "done",
           "\"$@\""
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       }
      }
     }
    }
   },
   "Properties": {
    "AssociatePublicIpAddress": {
     "Fn::FindInMap": [
      "Transformations",
      "Boolean",
      {
       "Ref": "provisionPublicIP"
      }
     ]
    },
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": "true",
       "VolumeType": "gp2"
      }
     },
     {
      "DeviceName": "/dev/xvdb",
      "NoDevice": "true"
     }
    ],
    "IamInstanceProfile": {
     "Ref": "BigipAutoScalingInstanceProfile"
    },
    "ImageId": {
     "Fn::If": [
      "noCustomImageId",
      {
       "Fn::FindInMap": [
        "BigipRegionMap",
        {
         "Ref": "AWS::Region"
        },
        {
         "Fn::FindInMap": [
          "AWSBigipThrougput",
          {
           "Ref": "throughput"
          },
          {
            "Ref": "imageName"
          }
         ]
        }
       ]
      },
      {
       "Ref": "customImageId"
      }
     ]
    },
    "InstanceMonitoring": "false",
    "InstanceType": {
     "Ref": "instanceType"
    },
    "KeyName": {
     "Ref": "sshKey"
    },
    "SecurityGroups": [
     {
      "Ref": "bigipExternalSecurityGroup"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash -x\n",
        "/opt/aws/apitools/cfn-init/bin/cfn-init -v -s ",
        {
         "Ref": "AWS::StackId"
        },
        " -r BigipLaunchConfig",
        " --region ",
        {
         "Ref": "AWS::Region"
        },
        "\n"
       ]
      ]
     }
    }
   },
   "Type": "AWS::AutoScaling::LaunchConfiguration"
  },
  "BigipLowCpuAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleDownPolicy"
     }
    ],
    "AlarmDescription": "CPU usage percentage below average threshold after 10 successive interval of 5 minutes",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": "10",
    "MetricName": "tmm-stat",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "300",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "lowCpuThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipLowbytesAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleDownPolicy"
     }
    ],
    "AlarmDescription": "Throughput below average threshold for 10 successive intervals of 5 minutes",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": "10",
    "MetricName": "throughput-per-sec",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "300",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "scaleDownBytesThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipScaleDownPolicy": {
   "Properties": {
    "AdjustmentType": "ChangeInCapacity",
    "AutoScalingGroupName": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Cooldown": "1500",
    "ScalingAdjustment": "-1"
   },
   "Type": "AWS::AutoScaling::ScalingPolicy"
  },
  "BigipScaleUpPolicy": {
   "Properties": {
    "AdjustmentType": "ChangeInCapacity",
    "AutoScalingGroupName": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Cooldown": "1500",
    "ScalingAdjustment": "1"
   },
   "Type": "AWS::AutoScaling::ScalingPolicy"
  },
  "S3Bucket": {
   "Properties": {
    "AccessControl": "BucketOwnerFullControl"
   },
   "Type": "AWS::S3::Bucket"
  },
  "SNSTopic": {
   "Properties": {
    "Subscription": [
     {
      "Endpoint": {
       "Ref": "notificationEmail"
      },
      "Protocol": "email"
     }
    ]
   },
   "Type": "AWS::SNS::Topic"
  },
  "SQSQueue": {
   "Properties": {
    "MessageRetentionPeriod": 3600
   },
   "Type": "AWS::SQS::Queue"
  },
  "bigipExternalSecurityGroup": {
   "Properties": {
    "GroupDescription": "Public or External interface rules, including BIG-IP management",
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": "22",
      "IpProtocol": "tcp",
      "ToPort": "22"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": {
       "Ref": "managementGuiPort"
      },
      "IpProtocol": "tcp",
      "ToPort": {
       "Ref": "managementGuiPort"
      }
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "80",
      "IpProtocol": "tcp",
      "ToPort": "80"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "443",
      "IpProtocol": "tcp",
      "ToPort": "443"
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         "Bigip Security Group: ",
         {
          "Ref": "AWS::StackName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "VpcId": {
     "Ref": "Vpc"
    }
   },
   "Type": "AWS::EC2::SecurityGroup"
  },
  "bigipSecurityGroupIngressAsmPolicySync": {
   "Properties": {
    "FromPort": 6123,
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": 6128
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  },
  "bigipSecurityGroupIngressConfigSync": {
   "Properties": {
    "FromPort": 4353,
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": 4353
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  },
  "bigipSecurityGroupIngressManagementGuiPort": {
   "Properties": {
    "FromPort": {
     "Ref": "managementGuiPort"
    },
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": {
     "Ref": "managementGuiPort"
    }
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  }
 }
}
